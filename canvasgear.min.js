/*
 This script paints animated icons on HTML5 canvases

 version : 0.2.2.a.. ? 20190401?0551..
 license : GNU LGPL v3 or later https://www.gnu.org/licenses/lgpl.html
 copyright : (c) 2014 - 2019 Norbert C. Maier https://github.com/normai/canvasgear/
 note : Minimized with Google Closure Compiler
 - - - ? - - - - - - - - - - - - - - - - - - - - - - - - - -
 This section provides algorithm 'Ballist'

 id 20140916?0411 namespace
 version : 0.x.x ? 20190330?0757..
 license : GNU LGPL v3 or later (https://www.gnu.org/licenses/lgpl.html)
 copyright : (c) 2014 - 2019 Norbert C. Maier https://github.com/normai/canvasgear/
 authors : ncm
 encoding : UTF-8-with-BOM
 ^ ^ ^ ? ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^
 This section provides the internal Template algorithm

 id : module 20190329?0611
 version : 0.x.x ? 20190330?0757..
 license : GNU LGPL v3 or later (https://www.gnu.org/licenses/lgpl.html)
 copyright : (c) 2014 - 2019 Norbert C. Maier https://github.com/normai/canvasgear/
 authors : ncm
 encoding : UTF-8-with-BOM
 ~ ~ ~ ? ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
 This section holds the develop algorithm

 id : section 20140901?0511
 + + + ? + + + + + + + + + + + + + + + + + + + + + + + + + +
 This section provides the oblongrose algorithm

 id : module 20190329?0721
 version :
 license : GNU LGPL v3 or later (https://www.gnu.org/licenses/lgpl.html)
 copyright : (c) 2014 - 2019 Norbert C. Maier https://github.com/normai/canvasgear/
 authors : ncm
 encoding : UTF-8-with-BOM
*/
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, c) {
  a != Array.prototype && a != Object.prototype && (a[b] = c.value);
};
$jscomp.getGlobal = function(a) {
  return "undefined" != typeof window && window === a ? a : "undefined" != typeof global && null != global ? global : a;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function(a, b, c, d) {
  if (b) {
    c = $jscomp.global;
    a = a.split(".");
    for (d = 0; d < a.length - 1; d++) {
      var e = a[d];
      e in c || (c[e] = {});
      c = c[e];
    }
    a = a[a.length - 1];
    d = c[a];
    b = b(d);
    b != d && null != b && $jscomp.defineProperty(c, a, {configurable:!0, writable:!0, value:b});
  }
};
$jscomp.polyfill("Array.prototype.fill", function(a) {
  return a ? a : function(a, c, d) {
    var b = this.length || 0;
    0 > c && (c = Math.max(0, b + c));
    if (null == d || d > b) {
      d = b;
    }
    d = Number(d);
    0 > d && (d = Math.max(0, b + d));
    for (c = Number(c || 0); c < d; c++) {
      this[c] = a;
    }
    return this;
  };
}, "es6", "es3");
var Cvgr = {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Const = {versionnumber:"0.2.2.a", versiontimestamp:"20190401\u00b00551..", bShow_Debug_Dialogs:!1};
Cvgr.Func = {};
Cvgr.Objs = {};
Cvgr.Vars = {bFlagTipTopTest:!1, bTemplateSearchFinished:!1, iTimeStart:0, iTimeStartMs:0};
Cvgr.Vars.iTimeStart = new Date;
Cvgr.Vars.iTimeStart.getTime();
Cvgr.Vars.iTimeStartMs = Cvgr.Vars.iTimeStart.getMilliseconds();
Cvgr.Vars.radiobuttn = document.getElementById("i20140819o1822");
null !== Cvgr.Vars.radiobuttn && (Cvgr.Vars.radiobuttn.checked = !0);
Cvgr.Objs.Algo = function() {
  this.Ikon = this.Funktion = this.Context = this.Canvas = null;
  this.draw = function() {
  };
};
Cvgr.Objs.Ikon = function() {
  this.AlgoName = "";
  this.BgColor = "Transparent";
  this.Color = "Silver";
  this.Color2 = "Gray";
  this.Color3 = "SlateGray";
  this.Hertz = 0.1;
  this.Ide = null;
  this.ShiftY = this.ShiftX = 0;
  this.SizeFactor = 1;
  this.Width = this.Height = null;
  this.Angle = 0;
  this.CmdsHash = this.Canvas = null;
  this.Command = "";
  this.Context = null;
  this.DrawNumberLimit = 1;
  this.iDrawCount = 0;
  this.bIsDefaultSettingDone = !1;
  this.iFrameDelay = 0;
};
Cvgr.Objs.Line = function(a, b, c, d, e, g) {
  if (void 0 === f) {
    var f = 2;
  }
  this.X1 = a;
  this.Y1 = b;
  this.X2 = c;
  this.Y2 = d;
  this.Colo = Trekta.Util2.colorNameToHex(e);
  this.Width = g;
};
Cvgr.Objs.Pojnt = function(a, b) {
  this.ptX = a;
  this.ptY = b;
  this.Colhor = "Red";
  this.getIt = function() {
    return "Pojnt  " + this.x + "/" + this.Y + this.Colhor + " apple";
  };
};
Cvgr.Vars.icos = [];
Cvgr.Vars.iFrameNo = 0;
Cvgr.startCanvasGear = function() {
  window.onload = function() {
    var a = document.getElementById("i20140819o1821"), b = document.getElementById("i20140819o1822");
    a.onclick = Cvgr.Func.setRadiobutton;
    b.onclick = Cvgr.Func.setRadiobutton;
  };
  window.requestAnimFrame = function() {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function(a) {
      window.setTimeout(a, 1000 / 60);
    };
  }();
  for (var a = document.getElementsByTagName("canvas"), b = 0; b < a.length; b++) {
    if (!(-1 < a[b].outerHTML.indexOf("skipthis"))) {
      var c = new Cvgr.Objs.Ikon;
      c.Canvas = a[b];
      c.Context = a[b].getContext("2d");
      c.Ide = a[b].id;
      c.Width = c.Canvas.width;
      c.Height = c.Canvas.height;
      c.Command = c.Canvas.attributes["data-cvgr"].value;
      c.CmdsHash = Trekta.Util2.CmdlinParser.parse(c.Command, !0);
      c.AlgoName = "algo" in c.CmdsHash && "" !== c.CmdsHash.algo ? c.CmdsHash.algo : "pulse";
      Cvgr.Vars.icos.push(c);
    }
  }
  a = null;
  Cvgr.Func.executeFrame();
};
Cvgr.Vars.aPiggyAlgoNames = [];
Cvgr.Vars.aPiggyModuleNamesTwo = [];
Cvgr.Vars.aPiggyCallbacks = [];
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(0);
}, function() {
  Cvgr.Func.pullbehind_onError(0);
}, function() {
  Cvgr.Func.pullbehind_onLoad(0);
}, function() {
  Cvgr.Func.pullbehind_onError(0);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(1);
}, function() {
  Cvgr.Func.pullbehind_onError(1);
}, function() {
  Cvgr.Func.pullbehind_onLoad(1);
}, function() {
  Cvgr.Func.pullbehind_onError(1);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(2);
}, function() {
  Cvgr.Func.pullbehind_onError(2);
}, function() {
  Cvgr.Func.pullbehind_onLoad(2);
}, function() {
  Cvgr.Func.pullbehind_onError(2);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(3);
}, function() {
  Cvgr.Func.pullbehind_onError(3);
}, function() {
  Cvgr.Func.pullbehind_onLoad(3);
}, function() {
  Cvgr.Func.pullbehind_onError(3);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(4);
}, function() {
  Cvgr.Func.pullbehind_onError(4);
}, function() {
  Cvgr.Func.pullbehind_onLoad(4);
}, function() {
  Cvgr.Func.pullbehind_onError(4);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(5);
}, function() {
  Cvgr.Func.pullbehind_onError(5);
}, function() {
  Cvgr.Func.pullbehind_onLoad(5);
}, function() {
  Cvgr.Func.pullbehind_onError(5);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(6);
}, function() {
  Cvgr.Func.pullbehind_onError(6);
}, function() {
  Cvgr.Func.pullbehind_onLoad(6);
}, function() {
  Cvgr.Func.pullbehind_onError(6);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(7);
}, function() {
  Cvgr.Func.pullbehind_onError(7);
}, function() {
  Cvgr.Func.pullbehind_onLoad(7);
}, function() {
  Cvgr.Func.pullbehind_onError(7);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(8);
}, function() {
  Cvgr.Func.pullbehind_onError(8);
}, function() {
  Cvgr.Func.pullbehind_onLoad(8);
}, function() {
  Cvgr.Func.pullbehind_onError(8);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(9);
}, function() {
  Cvgr.Func.pullbehind_onError(9);
}, function() {
  Cvgr.Func.pullbehind_onLoad(9);
}, function() {
  Cvgr.Func.pullbehind_onError(9);
}]);
Cvgr.Vars.aPiggyFlags4Avail = [];
Cvgr.Vars.aPiggyFlags4OnError2 = [];
Cvgr.Vars.aPiggyFlags4OnLoad1 = [];
Cvgr.Vars.aPiggyFlags4OnError1 = [];
Cvgr.Vars.aPiggyIconArrays = [];
Cvgr.Vars.aPiggyTimers = [];
Cvgr.Vars.iFramesInLastTwoSeconds = 0;
Cvgr.Vars.iFramesPerTowSeconds = 0;
Cvgr.Vars.iMarkLastTwoSecond = 0;
Cvgr.Vars.iMarkLastTwoSecondFrame = 0;
Cvgr.Vars.nIncTurnsPerFrame = 0;
Cvgr.Vars.nTrueAngleTurns = 0;
Cvgr.Vars.sDebugPageHelper = "";
Cvgr.Func.examineAlgo = function(a, b) {
  var c = b.AlgoName;
  if (b.AlgoName in Cvgr.Algos) {
    Cvgr.Vars.aPiggyFlags4Avail[a] = !0;
  } else {
    for (var d = Cvgr.Vars.aPiggyIconArrays[a], e = 0; e < d.length; e++) {
      Cvgr.Vars.aPiggyIconArrays[a][e].AlgoName = "pulse", Cvgr.Vars.aPiggyIconArrays[a][e].CmdsHash.text = "Rpx " + e, Cvgr.Vars.aPiggyIconArrays[a][e].iFrameDelay = Cvgr.Vars.iFrameNo - 1, Cvgr.Func.settleAlgoProperties(Cvgr.Vars.aPiggyIconArrays[a][e]);
    }
  }
  Cvgr.Vars.sDebugPageHelper += "<br /> \u2014 examineAlgo : piggy " + a + " &nbsp; onLoad = " + Cvgr.Vars.aPiggyFlags4OnLoad1[a] + " &nbsp; onError1 = " + Cvgr.Vars.aPiggyFlags4OnError1[a] + " &nbsp; onError2 = " + Cvgr.Vars.aPiggyFlags4OnError2[a] + " &nbsp; avail = " + Cvgr.Vars.aPiggyFlags4Avail[a] + " &nbsp; algo = " + c + " / " + b.AlgoName;
};
Cvgr.Func.executeFram_PrintInfoCanvas = function(a) {
  var b = document.getElementById(Cvgr.Vars.icos[a].Ide + ".info");
  if (null !== b) {
    var c = "<small>Canvas Debug Info :" + ("<br />iko.AlgoName = " + Cvgr.Vars.icos[a].AlgoName + " <br />frame no = " + Cvgr.Vars.iFrameNo + " <br />iko.Angle = " + Cvgr.Vars.icos[a].Angle.toFixed(9) + " <br />iko.Color = " + Cvgr.Vars.icos[a].Color + "<br />iko.Height = " + Cvgr.Vars.icos[a].Height + "<br />iko.Mode = " + (Cvgr.Vars.bFlagTipTopTest ? "Top" : "Tip") + "<br />iko.Width = " + Cvgr.Vars.icos[a].Width);
    for (var d in Cvgr.Vars.icos[a].CmdsHash) {
      var e = Trekta.Utils.htmlEscape(Cvgr.Vars.icos[a].CmdsHash[d]);
      c += "<br /> [cmd] " + d + " = " + e;
    }
    b.innerHTML = c + "</small>";
  }
};
Cvgr.Func.executeFram_PrintInfoPage = function(a, b, c) {
  var d = document.getElementById("Cvgr_DebugPageOutputArea");
  if (null !== d) {
    var e = "<b>CanvasGear Page Debug Info</b> :" + (" AlgoMode = " + (Cvgr.Vars.bFlagTipTopTest ? "Top" : "Tip") + "; ");
    e += " Frame number = " + Cvgr.Vars.iFrameNo + ";";
    e += "<br />Start time = " + Cvgr.Vars.iTimeStart + " = " + Cvgr.Vars.iTimeStart.valueOf() + ";";
    e = e + ("<br />Current time = " + a) + ("<br />Elapsed seconds (every two) = " + b + ";") + ("<br />Frames per seconds (total, average since start) = " + c.toFixed(9));
    e += "<br />Frames per seconds (for the last two seconds) = " + Cvgr.Vars.iFramesPerTowSeconds.toFixed(9);
    e += "<br />True angle for 1 Hz (turns) = " + Cvgr.Vars.nTrueAngleTurns.toFixed(9) + ";";
    e += "<br />Increment per frame (turns) = " + Cvgr.Vars.nIncTurnsPerFrame.toFixed(9) + ";";
    e += "<br />" + Cvgr.Vars.sDebugPageHelper;
    d.innerHTML = e;
  }
};
Cvgr.Func.executeFrame = function() {
  Cvgr.Vars.iFrameNo++;
  var a = new Date;
  a.getTime();
  var b = a - Cvgr.Vars.iTimeStart, c = Cvgr.Vars.iFrameNo / b * 1000;
  b = 2 * Math.floor(b / 2000);
  Cvgr.Vars.iMarkLastTwoSecond < b && (Cvgr.Vars.iMarkLastTwoSecond = b, Cvgr.Vars.iFramesInLastTwoSeconds = Cvgr.Vars.iFrameNo - Cvgr.Vars.iMarkLastTwoSecondFrame, Cvgr.Vars.iFramesPerTowSeconds = (Cvgr.Vars.iFrameNo - Cvgr.Vars.iMarkLastTwoSecondFrame) / 2, Cvgr.Vars.iMarkLastTwoSecondFrame = Cvgr.Vars.iFrameNo);
  0.001 > Cvgr.Vars.iFramesPerTowSeconds && (Cvgr.Vars.iFramesPerTowSeconds = 2 * c);
  Cvgr.Vars.nTrueAngleTurns += 1 / Cvgr.Vars.iFramesPerTowSeconds;
  1 < Cvgr.Vars.nTrueAngleTurns && --Cvgr.Vars.nTrueAngleTurns;
  Cvgr.Vars.nIncTurnsPerFrame = 1 / Cvgr.Vars.iFramesPerTowSeconds;
  Cvgr.Func.executeFram_PrintInfoPage(a, b, c);
  for (a = 0; a < Cvgr.Vars.icos.length; a++) {
    c = Cvgr.Vars.icos[a];
    if ("Template" === c.AlgoName) {
      var d = d;
    }
    if (!(1 > !c.DrawNumberLimit && Cvgr.Vars.iFrameNo - c.iFrameDelay > c.DrawNumberLimit)) {
      if (Cvgr.Func.executeFram_PrintInfoCanvas(a), d = c.AlgoName, d in Cvgr.Algos && ("Template" !== d || Cvgr.Vars.bTemplateSearchFinished) || c.bIsDefaultSettingDone) {
        c.bIsDefaultSettingDone || Cvgr.Func.initializeCanvas(c);
        try {
          Cvgr.Algos[d].executeAlgorithm(c);
        } catch (h) {
          Cvgr.Vars.sDebugPageHelper += "<br />\u21af executeAlgorithm failed:Ide = " + c.Ide + " algo = " + d + " (should never happen";
        }
      } else {
        if (b = Cvgr.Vars.aPiggyAlgoNames.indexOf(d), 0 <= b) {
          2 > Cvgr.Vars.iFrameNo && Cvgr.Vars.aPiggyIconArrays[b].push(c);
        } else {
          if (Cvgr.Vars.aPiggyAlgoNames.length > Cvgr.Vars.aPiggyCallbacks.length - 1) {
            Cvgr.Vars.sDebugPageHelper += "<br />*** Prefabricated callbacks finished : " + Cvgr.Vars.aPiggyAlgoNames.length, c.AlgoName = "pulse", c.CmdsHash.text = "Substitute";
          } else {
            var e = Trekta.Utils.retrieveScriptFolderAbs("canvasgear.js");
            b = e + "riders/canvasgear." + d + ".js";
            e = e + "canvasgear." + d + ".js";
            var g = Cvgr.Vars.aPiggyAlgoNames.length;
            Cvgr.Vars.aPiggyAlgoNames.push(d);
            var f = [];
            f.push(c);
            Cvgr.Vars.aPiggyIconArrays.push(f);
            Cvgr.Vars.aPiggyFlags4Avail.push(!1);
            Cvgr.Vars.aPiggyFlags4OnError2.push(!1);
            Cvgr.Vars.aPiggyFlags4OnLoad1.push(!1);
            Cvgr.Vars.aPiggyFlags4OnError1.push(!1);
            Cvgr.Vars.aPiggyTimers.push(setTimeout(Cvgr.Func.examineAlgo, 1444, Cvgr.Vars.aPiggyTimers.length, Cvgr.Vars.icos[a]));
            Cvgr.Vars.aPiggyModuleNamesTwo.push(e);
            Cvgr.Vars.sDebugPageHelper += "<br /> \u2014 pullScriptBehind " + g + " " + d;
            Trekta.Utils.pullScriptBehind(b, Cvgr.Vars.aPiggyCallbacks[g][0], Cvgr.Vars.aPiggyCallbacks[g][1]);
          }
        }
      }
    }
  }
  window.requestAnimFrame(Cvgr.Func.executeFrame);
};
Cvgr.Func.initializeCanvas = function(a) {
  var b = {algo:"AlgoName", bgcolor:"BgColor", color:"Color", color2:"Color2", color3:"Color3", height:"Height", hertz:"Hertz", shiftx:"ShiftX", shifty:"ShiftY", width:"Width"}, c = Cvgr.Algos[a.AlgoName].defaultProperties, d;
  for (d in c) {
    a[d] = c[d];
  }
  for (var e in a.CmdsHash) {
    "algo" !== e && (c = e, e in b && (c = b[e]), a[c] = a.CmdsHash[e]);
  }
  b = a.AlgoName;
  "pickupOnKeyDown" in Cvgr.Algos[b] && (document.onkeydown = Cvgr.Algos[b].pickupOnKeyDown);
  "pickupOnMouseMove" in Cvgr.Algos[b] && (a.Canvas.onmousemove = Cvgr.Algos[b].pickupOnMouseMove);
  "pickupOnMouseDown" in Cvgr.Algos[b] && (a.Canvas.onmousedown = Cvgr.Algos[b].pickupOnMouseDown);
  "pickupOnMouseUp" in Cvgr.Algos[b] && (a.Canvas.onmouseup = Cvgr.Algos[b].pickupOnMouseUp);
  "pickupOnTouchMove" in Cvgr.Algos[b] && (a.Canvas.ontouchmove = Cvgr.Algos[b].pickupOnTouchMove);
  "pickupOnTouchStart" in Cvgr.Algos[b] && (a.Canvas.ontouchstart = Cvgr.Algos[b].pickupOnTouchStart);
  a.bIsDefaultSettingDone = !0;
};
Cvgr.Func.pullbehind_onError = function(a) {
  if (!1 === Cvgr.Vars.aPiggyFlags4OnError1[a]) {
    Cvgr.Vars.aPiggyFlags4OnError1[a] = !0, Trekta.Utils.pullScriptBehind(Cvgr.Vars.aPiggyModuleNamesTwo[a], Cvgr.Vars.aPiggyCallbacks[a][0], Cvgr.Vars.aPiggyCallbacks[a][1]), Cvgr.Vars.sDebugPageHelper += "<br /> \u2014 pullScript_Second : &nbsp; piggy " + a + ' &nbsp; "' + Cvgr.Vars.aPiggyAlgoNames[a] + '" &nbsp; onload = ' + Cvgr.Vars.aPiggyFlags4OnLoad1[a] + " &nbsp; onerror1 = " + Cvgr.Vars.aPiggyFlags4OnError1[a] + " &nbsp; onerror2 = " + Cvgr.Vars.aPiggyFlags4OnError2[a];
  } else {
    Cvgr.Vars.aPiggyFlags4OnError2[a] = !0;
    if (Cvgr.Vars.aPiggyAlgoNames[a] in Cvgr.Algos) {
      Cvgr.Vars.bTemplateSearchFinished = !0;
      Cvgr.Vars.aPiggyFlags4Avail[a] = !0;
      for (var b = Cvgr.Vars.aPiggyIconArrays[a], c = 0; c < b.length; c++) {
        Cvgr.Vars.aPiggyIconArrays[a][c].CmdsHash.text = "Template intern " + c, Cvgr.Vars.aPiggyIconArrays[a][c].iFrameDelay = Cvgr.Vars.iFrameNo - 1, Cvgr.Func.initializeCanvas(Cvgr.Vars.aPiggyIconArrays[a][c]);
      }
    } else {
      for (b = Cvgr.Vars.aPiggyIconArrays[a], c = 0; c < b.length; c++) {
        Cvgr.Vars.aPiggyIconArrays[a][c].AlgoName = "pulse", Cvgr.Vars.aPiggyIconArrays[a][c].CmdsHash.text = "Rp " + c, Cvgr.Vars.aPiggyIconArrays[a][c].iFrameDelay = Cvgr.Vars.iFrameNo - 1, Cvgr.Func.initializeCanvas(Cvgr.Vars.aPiggyIconArrays[a][c]);
      }
    }
    Cvgr.Vars.sDebugPageHelper += "<br /> \u2014 pullbehind_onError : &nbsp; piggy " + a + ' &nbsp; "' + Cvgr.Vars.aPiggyAlgoNames[a] + '" &nbsp; onload = ' + Cvgr.Vars.aPiggyFlags4OnLoad1[a] + " &nbsp; onerror1 = " + Cvgr.Vars.aPiggyFlags4OnError1[a] + " &nbsp; onerror2 = " + Cvgr.Vars.aPiggyFlags4OnError2[a];
  }
};
Cvgr.Func.pullbehind_onLoad = function(a) {
  Cvgr.Vars.aPiggyFlags4OnLoad1[a] = !0;
  var b = Cvgr.Vars.aPiggyAlgoNames[a];
  Cvgr.Vars.sDebugPageHelper += "<br /> \u2014 pullbehind_onLoad : piggy " + a;
  a = Cvgr.Vars.aPiggyIconArrays[a];
  Cvgr.Vars.sDebugPageHelper += ' &nbsp; algo "' + a[0].AlgoName + '" &nbsp; count = ' + a.length;
  for (var c = 0; c < a.length; c++) {
    var d = a[c];
    Cvgr.Vars.sDebugPageHelper += "<br /> \u2014 &nbsp; &nbsp; &nbsp; &nbsp; iko.Ide = " + d.Ide;
    b in Cvgr.Algos && (d.bIsDefaultSettingDone || Cvgr.Func.initializeCanvas(d), d.iFrameDelay = Cvgr.Vars.iFrameNo - 1, Cvgr.Algos[d.AlgoName].executeAlgorithm(d));
  }
};
Cvgr.Func.setRadiobutton = function() {
  var a = "[Debug 20140926\u00b01131]\n\nNow radio-button algo-mode = ";
  document.FormAlgoMode.AlgoMode[0].checked ? (Cvgr.Vars.bFlagTipTopTest = !1, a += document.FormAlgoMode.AlgoMode[0].value) : (Cvgr.Vars.bFlagTipTopTest = !0, a += document.FormAlgoMode.AlgoMode[1].value);
  Cvgr.Const.bShow_Debug_Dialogs && alert(a);
};
Cvgr = Cvgr || {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Algos.Ballist = {Hit:function(a, b) {
  this.ringval = a;
  this.minutes = b;
  a = this.minutes / 60 * Math.PI * 2;
  a += 1.5 * Math.PI;
  b = 10.9 - this.ringval;
  var c = b * Math.sin(a) * 0.20;
  this.X = b * Math.cos(a) * 0.20;
  this.Y = c;
}, Ring:function(a, b, c, d) {
  null === a && (a = "?");
  null === b && (b = 0.987);
  null === c && (c = "gray");
  null === d && (d = "white");
  this.ringname = a;
  this.radiusAbs = b;
  this.colorRing = c;
  this.colorSpace = d;
}, Target:function() {
  this.Diameter = 0.1;
  this.Shortnam = this.Naame = "<n/a>";
  this.rings = [];
}, executeAlgo_drawDiagonal:function(a) {
  var b = a.Height, c = b - 11, d = a.Width - 11;
  b -= 11;
  a.Context.beginPath();
  a.Context.moveTo(11, c);
  a.Context.lineTo(d, b);
  a.Context.moveTo(11, b + 5.5);
  a.Context.lineTo(11, b - 5.5);
  a.Context.moveTo(d, b + 5.5);
  a.Context.lineTo(d, b - 5.5);
  a.Context.strokeStyle = a.Color;
  a.Context.fillStyle = a.Color;
  a.Context.fill();
  a.Context.closePath();
  a.Context.strokeStyle = "turquoise";
  a.Context.lineWidth = 3;
  a.Context.stroke();
  a.Context.font = "1.2em Arial";
  a.Context.fillStyle = "turquoise";
  a.Context.fillText("~0.11 m", 16.5, c - 5.5);
  a.CmdsHash.text && (a.Context.fillStyle = "#102030", a.Context.font = "1.2em Arial", a.Context.fillText(a.CmdsHash.text, 10, 20));
}, executeAlgo_getSeries:function(a) {
  var b = [];
  if ("undefined" === typeof a || 1 > a.length) {
    var c = new Cvgr.Algos.Ballist.Hit(10.7, 55);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(9.3, 43);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(2.1, 0);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(2.2, 1);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(2.3, 3);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(2.4, 6);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(2.5, 10);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(2.6, 20);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(2.7, 30);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(2.8, 40);
    b.push(c);
    c = new Cvgr.Algos.Ballist.Hit(2.9, 50);
    b.push(c);
  } else {
    a = a.split(" ");
    for (var d = 0; d < a.length; d++) {
      c = a[d].split("/"), c = new Cvgr.Algos.Ballist.Hit(c[0], c[1]), b.push(c);
    }
  }
  return b;
}, executeAlgo_getTarget:function(a) {
  var b = new Cvgr.Algos.Ballist.Target;
  "kkspp" === a ? (b.Diameter = 0.500, b.Naame = "Sportpistole 25 m Pr\u00e4zision", b.Shortnam = a, b.rings.push(new Cvgr.Algos.Ballist.Ring("10", 0.025, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("9", 0.050, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("8", 0.075, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("7", 0.100, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("6", 0.125, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 
  0.150, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 0.175, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.200, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 0.225, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 0.250, "blue", "white"))) : "kkspd" === a ? (b.Diameter = 0.500, b.Naame = "Sportpistole 25 m Duell", b.Shortnam = a, b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 0.050, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 
  0.100, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.150, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 0.200, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 0.250, "blue", "black"))) : "lg10m" === a ? (b.Diameter = 0.050, b.Naame = "Luftgewehr 10 m", b.Shortnam = a, b.rings.push(new Cvgr.Algos.Ballist.Ring("10", 0.0025, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("9", 0.0050, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("8", 
  0.0075, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("7", 0.0100, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("6", 0.0125, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 0.0150, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 0.0175, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.0200, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 0.0225, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 
  0.0250, "blue", "white"))) : "lgdt10m" === a ? (b.Diameter = 0.0100, b.Naame = "Deutsche Luftgewehr-Scheibe 10 m", b.Shortnam = a, b.rings.push(new Cvgr.Algos.Ballist.Ring("10", 0.0005, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("9", 0.0010, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("8", 0.0015, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("7", 0.0020, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("6", 0.0025, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 
  0.0030, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 0.0035, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.0040, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 0.0045, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 0.0050, "blue", "white"))) : (b.Diameter = 0.1500, b.Naame = "Luftpistole 10 m", b.Shortnam = "lupi10m", b.rings.push(new Cvgr.Algos.Ballist.Ring("10", 0.0055, "black", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("9", 
  0.0135, "black", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("8", 0.0215, "gray", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("7", 0.0295, "gray", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("6", 0.0375, "gray", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 0.0455, "gray", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 0.0535, "red", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.0615, "red", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 
  0.0695, "red", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 0.0775, "red", "white")));
  return b;
}, executeAlgorithm:function(a) {
  var b = Cvgr.Algos.Ballist.executeAlgo_getTarget(), c = Cvgr.Algos.Ballist.executeAlgo_getSeries(a.CmdsHash.series);
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = a.BgColor;
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  var d = (a.Width + a.Height) / 4, e = d, g = d;
  null !== a.ShiftX && (e = d + parseInt(a.ShiftX, 10));
  null !== a.ShiftY && (g = d + parseInt(a.ShiftY, 10));
  for (var f = 0; f < b.rings.length; f++) {
    var h = d * b.rings[f].radiusAbs * 12;
    a.Context.beginPath();
    a.Context.arc(e, g, h, 0, 2 * Math.PI, !1);
    a.Context.closePath();
    a.Context.strokeStyle = Trekta.Util2.colorNameToHex(b.rings[f].colorRing);
    a.Context.lineWidth = 1;
    a.Context.stroke();
  }
  for (b = 0; b < c.length; b++) {
    h = 6, e = d + 50 * c[b].X + parseInt(a.ShiftX, 10), g = d + 50 * c[b].Y + parseInt(a.ShiftY, 10), a.Context.beginPath(), a.Context.arc(e, g, h, 0, 2 * Math.PI, !1), a.Context.closePath(), a.Context.strokeStyle = "#4169e1", a.Context.lineWidth = 1, a.Context.stroke();
  }
  Cvgr.Algos.Ballist.executeAlgo_drawDiagonal(a);
  a.Angle += Cvgr.Vars.nIncTurnsPerFrame * Math.PI * a.Hertz;
  a.Angle > 4 * Math.PI && (a.Angle -= 4 * Math.PI);
}, defaultProperties:{}};
Cvgr = Cvgr || {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Algos.Template = Cvgr.Algos.Template || {};
Cvgr.Algos.Template.executeAlgorithm = function(a) {
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = a.BgColor;
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  var b = a.Width / 2, c = a.Height / 2;
  b = null !== a.ShiftX ? b + parseInt(a.ShiftX, 10) : b;
  c = null !== a.ShiftY ? c + parseInt(a.ShiftY, 10) : c;
  var d = (a.Width + a.Height) / 4 * 0.66;
  a.Context.beginPath();
  a.Context.arc(b, c, d, 0.1 + a.Angle, 1.6 * Math.PI + a.Angle, !1);
  a.Context.strokeStyle = a.Color;
  a.Context.lineWidth = 6;
  a.Context.stroke();
  b = "Template intern";
  a.CmdsHash.text && (b = a.CmdsHash.text);
  a.Context.fillStyle = "MediumVioletRed";
  a.Context.font = "0.9em Arial";
  a.Context.fillText(b, 3, 21);
  a.Angle += Cvgr.Vars.nIncTurnsPerFrame * Math.PI * a.Hertz;
  a.Angle > 2 * Math.PI && (a.Angle -= 2 * Math.PI);
};
Cvgr.Algos.Template.defaultProperties = {DrawNumberLimit:0};
Cvgr = Cvgr || {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Algos.develop = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2;
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = a.BgColor;
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  var c = [], d = new Cvgr.Objs.Line(3, 3, b - 3, 3, a.Color), e = new Cvgr.Objs.Line(4, b - 4, b - 4, b - 4, a.Color2);
  b = new Cvgr.Objs.Line(5, b - 7, b - 5, 7, a.Color3);
  c.push(d);
  c.push(e);
  c.push(b);
  for (d = 0; d < c.length; d++) {
    a.Context.beginPath(), a.Context.moveTo(c[d].X1, c[d].Y1), a.Context.lineTo(c[d].X2, c[d].Y2), a.Context.lineWidth = 3, a.Context.strokeStyle = c[d].Colo, a.Context.stroke();
  }
}, defaultProperties:{BgColor:"LightCyan", Color:"LightCoral", Color2:"PaleGreen", Color3:"LightBlue"}};
Cvgr = Cvgr || {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Algos.oblongrose = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2 / 2;
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.strokeStyle = a.Color;
  a.Context.fillStyle = "Yellow";
  a.Context.translate(b, b);
  for (var c, d = 0, e = 0; 16 > e; e++) {
    c = 1.7 * Math.PI / 16, a.Context.rotate(c), d += c, a.Context.strokeRect(0.1 * b, 0.1 * b, 0.3 * b, 0.7 * b);
  }
  a.Context.rotate(-1 * d);
  a.Context.translate(-1 * b, -1 * b);
}, defaultProperties:{BgColor:"LightCyan", Color:"LightCoral", Color2:"PaleGreen", Color3:"LightBlue", DrawNumberLimit:5}};
Cvgr.Algos.pulse = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2;
  b = b / 2 * a.SizeFactor;
  var c = a.Width / 2 + parseInt(a.ShiftX, 9), d = a.Height / 2 + parseInt(a.ShiftY, 9);
  b *= Math.abs(Math.cos(a.Angle));
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = "#f0f0f0";
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.beginPath();
  a.Context.arc(c, d, b, 0, 2 * Math.PI, !1);
  a.Context.closePath();
  a.Context.fillStyle = a.Color;
  a.Context.fill();
  a.CmdsHash.text && (c = a.CmdsHash.text, a.Context.fillStyle = "MediumVioletRed", a.Context.font = "0.9em Arial", a.Context.fillText(c, 3, 21));
  a.Angle += Cvgr.Vars.nIncTurnsPerFrame * Math.PI * a.Hertz;
  a.Angle > Math.PI && (a.Angle -= Math.PI);
}, defaultProperties:{BgColor:"LightCyan", DrawNumberLimit:0}};
Cvgr.Algos.triangle = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2, c = 0.5 * b, d = 0.01 * b, e = 0.8 * b, g = 0.9 * b, f = 0.2 * b;
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.translate(b / 2, b / 2);
  a.Context.rotate(4 * Cvgr.Vars.nIncTurnsPerFrame * a.Hertz);
  a.Context.translate(-b / 2, -b / 2);
  a.Context.fillStyle = a.BgColor;
  try {
    a.Context.fillRect(0, 0, a.Width, a.Height);
  } catch (h) {
    Cvgr.Const.bShow_Debug_Dialogs && alert('[debug 20140901\u00b00913]\nException "' + h + '"');
  }
  a.Context.beginPath();
  try {
    a.Context.moveTo(c, d);
  } catch (h) {
    Cvgr.Const.bShow_Debug_Dialogs && alert('[debug 20140901\u00b00932]\nException "' + h + '"');
  }
  a.Context.lineTo(e, g);
  a.Context.lineTo(f, g);
  a.Context.fillStyle = a.Color;
  a.Context.fill();
  a.Context.closePath();
}, defaultProperties:{BgColor:"LightCyan", Color:"LightCoral", Color2:"PaleGreen", Color3:"LightBlue", DrawNumberLimit:0}};
Cvgr.Algos.triangulum = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2;
  var c = Math.sin(a.Angle) * (b - 4) / 2 + b / 2;
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = a.BgColor;
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.beginPath();
  a.Context.moveTo(3, 3);
  a.Context.lineTo(b - 3, 3);
  a.Context.lineTo(c, b - 5);
  a.Context.fillStyle = a.Color;
  a.Context.fill();
  a.Context.closePath();
  a.Context.lineWidth = 2;
  a.Context.strokeStyle = a.Color2;
  a.Context.stroke();
  a.Context.beginPath();
  a.Context.moveTo(2, b - 2);
  a.Context.lineTo(b - 2, b - 2);
  a.Context.lineWidth = 3;
  a.Context.strokeStyle = a.Color3;
  a.Context.stroke();
  a.Angle += Cvgr.Vars.nIncTurnsPerFrame * Math.PI * a.Hertz;
  a.Angle > 4 * Math.PI && (a.Angle -= 4 * Math.PI);
}};
var Trekta = Trekta || {};
Trekta.Util2 = Trekta.Util2 || {};
Trekta.Util2.Webcolors = function() {
  this.pink = "#ffc0cb";
  this.lightpink = "#ffb6c1";
  this.hotpink = "#ff69b4";
  this.deeppink = "#ff1493";
  this.palevioletred = "#db7093";
  this.mediumvioletred = "#c71585";
  this.lightsalmon = "#ffa07a";
  this.salmon = "#fa8072";
  this.darksalmon = "#e9967a";
  this.lightcoral = "#f08080";
  this.indianred = "#cd5c5c";
  this.crimson = "#dc143c";
  this.firebrick = "#b22222";
  this.darkred = "#8b0000";
  this.red = "#ff0000";
  this.orangered = "#ff4500";
  this.tomato = "#ff6347";
  this.coral = "#ff7f50";
  this.darkorange = "#ff8c00";
  this.orange = "#ffa500";
  this.yellow = "#ffff00";
  this.lightyellow = "#ffffe0";
  this.lemonchiffon = "#fffacd";
  this.lightgoldenrodyellow = "#fafad2";
  this.papayawhip = "#ffefd5";
  this.moccasin = "#ffe4b5";
  this.peachpuff = "#ffdab9";
  this.palegoldenrod = "#eee8aa";
  this.khaki = "#f0e68c";
  this.darkkhaki = "#bdb76b";
  this.gold = "#ffd700";
  this.cornsilk = "#fff8dc";
  this.blanchedalmond = "#ffebcd";
  this.bisque = "#ffe4c4";
  this.navajowhite = "#ffdead";
  this.wheat = "#f5deb3";
  this.burlywood = "#deb887";
  this.tan = "#d2b48c";
  this.rosybrown = "#bc8f8f";
  this.sandybrown = "#f4a460";
  this.goldenrod = "#daa520";
  this.darkgoldenrod = "#b8860b";
  this.peru = "#cd853f";
  this.chocolate = "#d2691e";
  this.saddlebrown = "#8b4513";
  this.sienna = "#a0522d";
  this.brown = "#a52a2a";
  this.maroon = "#800000";
  this.darkolivegreen = "#556b2f";
  this.olive = "#808000";
  this.olivedrab = "#6b8e23";
  this.yellowgreen = "#9acd32";
  this.limegreen = "#32cd32";
  this.lime = "#00ff00";
  this.lawngreen = "#7cfc00";
  this.chartreuse = "#7fff00";
  this.greenyellow = "#adff2f";
  this.springgreen = "#00ff7f";
  this.mediumspringgreen = "#00fa9a";
  this.lightgreen = "#90ee90";
  this.palegreen = "#98fb98";
  this.darkseagreen = "#8fbc8f";
  this.mediumseagreen = "#3cb371";
  this.seagreen = "#2e8b57";
  this.forestgreen = "#228b22";
  this.green = "#008000";
  this.darkgreen = "#006400";
  this.mediumaquamarine = "#66cdaa";
  this.cyan = this.aqua = "#00ffff";
  this.lightcyan = "#e0ffff";
  this.paleturquoise = "#afeeee";
  this.aquamarine = "#7fffd4";
  this.turquoise = "#40e0d0";
  this.mediumturquoise = "#48d1cc";
  this.darkturquoise = "#00ced1";
  this.lightseagreen = "#20b2aa";
  this.cadetblue = "#5f9ea0";
  this.darkcyan = "#008b8b";
  this.teal = "#008080";
  this.lightsteelblue = "#b0c4de";
  this.powderblue = "#b0e0e6";
  this.lightblue = "#add8e6";
  this.skyblue = "#87ceeb";
  this.lightskyblue = "#87cefa";
  this.deepskyblue = "#00bfff";
  this.dodgerblue = "#1e90ff";
  this.cornflowerblue = "#6495ed";
  this.steelblue = "#4682b4";
  this.royalblue = "#4169e1";
  this.blue = "#0000ff";
  this.mediumblue = "#0000cd";
  this.darkblue = "#00008b";
  this.navy = "#000080";
  this.midnightblue = "#191970";
  this.lavender = "#e6e6fa";
  this.thistle = "#d8bfd8";
  this.plum = "#dda0dd";
  this.violet = "#ee82ee";
  this.orchid = "#da70d6";
  this.magenta = this.fuchsia = "#ff00ff";
  this.mediumorchid = "#ba55d3";
  this.mediumpurple = "#9370db";
  this.blueviolet = "#8a2be2";
  this.darkviolet = "#9400d3";
  this.darkorchid = "#9932cc";
  this.darkmagenta = "#8b008b";
  this.purple = "#800080";
  this.indigo = "#4b0082";
  this.darkslateblue = "#483d8b";
  this.slateblue = "#6a5acd";
  this.mediumslateblue = "#7b68ee";
  this.white = "#ffffff";
  this.snow = "#fffafa";
  this.honeydew = "#f0fff0";
  this.mintcream = "#f5fffa";
  this.azure = "#f0ffff";
  this.aliceblue = "#f0f8ff";
  this.ghostwhite = "#f8f8ff";
  this.whitesmoke = "#f5f5f5";
  this.seashell = "#fff5ee";
  this.beige = "#f5f5dc";
  this.oldlace = "#fdf5e6";
  this.floralwhite = "#fffaf0";
  this.ivory = "#fffff0";
  this.antiquewhite = "#faebd7";
  this.linen = "#faF0e6";
  this.lavenderblush = "#fff0f5";
  this.mistyrose = "#ffe4e1";
  this.gainsboro = "#dcdcdc";
  this.lightgrey = "#d3d3d3";
  this.silver = "#c0c0c0";
  this.darkgray = "#a9a9a9";
  this.gray = "#808080";
  this.dimgray = "#696969";
  this.lightslategray = "#778899";
  this.slategray = "#708090";
  this.darkslategray = "#2f4f4f";
  this.black = "#000000";
  this.rebeccapurple = "#663399";
  this.verydarkviolett = "#d000d0";
};
Trekta.Util2.colorNameToHex = function(a) {
  var b = new Trekta.Util2.Webcolors;
  a = a.toLowerCase();
  return b[a] ? b[a] : "#C0C0C0";
};
Trekta.Util2.CmdlinParser = function() {
  var a = null;
  a = function(a, c) {
    void 0 === a && (a = "");
    for (var b = [], e = !1, g = "", f = 0; f < a.length; f++) {
      " " !== a.charAt(f) && "=" !== a.charAt(f) || e ? '"' === a.charAt(f) && c ? e = !e : g += a.charAt(f) : (b.push(g), g = "", "=" === a.charAt(f) && b.push("="));
    }
    b.push(g);
    a = [];
    for (f = 0; f < b.length; f++) {
      "" !== b[f] && (c = b[f], a[c] = "<n/a>", "=" === b[f + 1] && (a[c] = b[f + 2], f++, f++));
    }
    return a;
  };
  return {parse:a};
}();
Trekta = Trekta || {};
Trekta.Utils = Trekta.Utils || {getFileNameFull:function() {
  var a = document.location.href;
  a = a.substring(0, -1 === a.indexOf("?") ? a.length : a.indexOf("?"));
  return a = a.substring(0, -1 === a.indexOf("#") ? a.length : a.indexOf("#"));
}, getFilenamePlain:function() {
  var a = Trekta.Utils.getFileNameFull();
  -1 !== a.indexOf("/", a.length - 1) && (a += "index.html");
  a = a.split("/");
  return a = a[a.length - 1];
}, getXMLHttp:function() {
  if (Trekta.Utils.bIs_Browser_Explorer) {
    try {
      var a = new ActiveXObject("Msxml2.XMLHTTP");
    } catch (b) {
      try {
        a = new ActiveXObject("Microsoft.XMLHTTP");
      } catch (c) {
        return alert("Sorry, your browser does not support AJAX [message 20160613\u00b00421]"), !1;
      }
    }
  } else {
    a = new XMLHttpRequest;
  }
  return a;
}, htmlEscape:function(a) {
  a = a.replace(/</g, "&lt;");
  return a = a.replace(/>/g, "&gt;");
}, isScriptAlreadyLoaded:function(a) {
  a = a.replace(/\./g, "\\.");
  a = new RegExp(a + "$", "");
  var b = document.getElementsByTagName("SCRIPT");
  if (b && 0 < b.length) {
    for (var c in b) {
      if (b[c].src && b[c].src.match(a)) {
        return !0;
      }
    }
  }
  return !1;
}, pullScriptBehind:function(a, b, c) {
  if (Trekta.Utils.isScriptAlreadyLoaded(a)) {
    Trekta.Utils.bShow_Debug_Dialogs && alert("[Debug]\n\nScript is already loaded:\n\n" + a), b();
  } else {
    if ("undefined" !== typeof DafStart) {
      var d = DafStart.Conf.s_DaftariBaseFolderRel + a;
      0 < a.indexOf("showdown/showdown") && (d = a);
    } else {
      d = a;
    }
    a = document.getElementsByTagName("head")[0];
    var e = document.createElement("script");
    e.type = "text/javascript";
    e.src = d;
    e.onload = b;
    "undefined" !== typeof c && null !== c && (e.onerror = c);
    a.appendChild(e);
    return !0;
  }
}, readTextFile1:function(a, b) {
  var c = "", d = Trekta.Utils.getXMLHttp();
  b ? d.open("GET", a, !0) : d.open("GET", a, !1);
  d.onreadystatechange = function() {
    4 !== d.readyState || 200 !== d.status && 0 !== d.status || (c = d.responseText);
  };
  try {
    d.send(null);
  } catch (e) {
  }
  return c;
}, retrieveScriptFolderAbs:function(a) {
  var b = a.replace(/\./g, "\\.") + "$";
  a = new RegExp(b, "");
  b = new RegExp("(.*)" + b, "");
  var c = "", d = document.getElementsByTagName("SCRIPT");
  if (d && 0 < d.length) {
    for (var e in d) {
      d[e].src && d[e].src.match(a) && (c = d[e].src.replace(b, "$1"));
    }
  }
  return c;
}, retrieveScriptFolderRel:function(a) {
  var b, c = document.getElementsByTagName("script"), d = null, e = !1;
  for (b = 0; b < c.length; b++) {
    if (0 < c[b].src.indexOf(a)) {
      d = c[b];
      e = !0;
      break;
    }
  }
  if (!e) {
    return alert("[20160501\u00b01631] Fatal error\nThe wanted script could not be found.\nIt looks like the search string is wrong.\n\nsearch string = " + a), "";
  }
  b = d.src;
  b = b.substring(0, b.length - a.length);
  Trekta.Utils.s_DaftariBaseFolderAbs = b;
  c = "";
  for (b = 0; b < d.attributes.length; b++) {
    if ("src" === d.attributes[b].name) {
      c = d.attributes[b].value;
      break;
    }
  }
  return c.substring(0, c.length - a.length + 1);
}, windowOnloadDaisychain:function(a) {
  if (window.onload) {
    var b = window.onload;
    window.onload = function() {
      b();
      a();
    };
  } else {
    window.onload = function() {
      a();
    };
  }
}, bIs_Browser_Chrome:navigator.userAgent.match(/Chrome/) ? !0 : !1, bIs_Browser_Explorer:navigator.appName.match(/Explorer/) ? !0 : !1, bIs_Browser_Firefox:navigator.userAgent.match(/Firefox/) ? !0 : !1, bIs_Browser_Opera:navigator.userAgent.match(/(Opera)|(OPR)/) ? !0 : !1, bShow_Debug_Dialogs:!1};
Trekta.Utils.windowOnloadDaisychain(Cvgr.startCanvasGear);

