/*
 This script paints animated icons on HTML5 canvases

 version : 0.2.3.d — 20190408°0212
 license : GNU LGPL v3 or later https://www.gnu.org/licenses/lgpl.html
 copyright : (c) 2014 - 2019 Norbert C. Maier https://github.com/normai/canvasgear/
 note : Minimized with Google Closure Compiler
 This area Trekta.Utils holds low level functions for standalone scripts

 version : 20190408°0212
 copyright : © 2019 Norbert C. Maier
 license : GNU AGPL v3
*/
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, c) {
  a != Array.prototype && a != Object.prototype && (a[b] = c.value);
};
$jscomp.getGlobal = function(a) {
  return "undefined" != typeof window && window === a ? a : "undefined" != typeof global && null != global ? global : a;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function(a, b, c, d) {
  if (b) {
    c = $jscomp.global;
    a = a.split(".");
    for (d = 0; d < a.length - 1; d++) {
      var e = a[d];
      e in c || (c[e] = {});
      c = c[e];
    }
    a = a[a.length - 1];
    d = c[a];
    b = b(d);
    b != d && null != b && $jscomp.defineProperty(c, a, {configurable:!0, writable:!0, value:b});
  }
};
$jscomp.polyfill("Array.prototype.fill", function(a) {
  return a ? a : function(a, c, d) {
    var b = this.length || 0;
    0 > c && (c = Math.max(0, b + c));
    if (null == d || d > b) {
      d = b;
    }
    d = Number(d);
    0 > d && (d = Math.max(0, b + d));
    for (c = Number(c || 0); c < d; c++) {
      this[c] = a;
    }
    return this;
  };
}, "es6", "es3");
var Cvgr = {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Const = {versionnumber:"0.2.3.d", versiontimestamp:"20190402°0641..", bShow_Debug_Dialogs:!1, sB64Dopiaza_Bonk_Mp3:"data:audio/mp3;base64,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qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/44LE/wAAA0gAAAAAqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqTEFNRTMuOTKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq", 
sB64Dopiaza_Fingerplop2_Mp3:"data:audio/mp3;base64,//uQbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAAEAAAIKABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECAgICAgICAgICAgICAgICAgICAgICAgICAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwP////////////////////////////////8AAAA5TEFNRTMuOTcgAaoAAAAALBcAABSAJAXNTgAAgAAACChX+laoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQbAAAA00Qzg1h4AAtwRmipIwAEXFZjblqMBkXGq93KKICAFL8CjNKzSNcQIQcrHRSkTEgFIdVYdg8FJeJgREFICoHA4Kct5Oy5nWoFYrHkSkRg+D4Pg+CAIAgUBMHwffBAEAQOCQEIPg+4HwfKAmD5/DCz/y4IHOUBAEHawff4IS4P3+XygIfUcKAh9SoBsnkgFCBAQAgAMAYGw2T6ogOQfB8P+Xf8uH0fX4nqB9///n/iB3/g+f/ghQsBgMBgNRgMBQJAwEABhMDmAAZrRgcA4jgfFdDzHA0Ls8Az/BnKvA/G8DlYfAouCAOAUB/C0AcAjQZKr8GxwVENsAEIgZMF/4nEMcEGh+oIh4IhP/42gQiwahCmGJCDJ//5IBqwphc4PBNidBHhM62//xQAyhLFgdJWNU5UMf///MEGcuFxNlus+jVgOBwMBwOBwOBgKBAAAEBAc/wQCAMiCrwNRcBZo1o9ET4KhXLfk4+Ki1/qSEhKf/541EiTjz/84gISY9G//7qe6Fy//A/YkmQIjbLbbLrdpXbLbdW6uhNGS/T//uSbAoAA+ZhXO4lYARAilqqxYgADnFZPl2RgAjWg+lrkiAAxULmnaKsWNEmpHs4wfU1UVHbE2k0xNadXVXdvOnEpOTNdvfw+y917v2vr/+Lbf1df/x26Yafs5NJb2FoIxv2z90Zu6KqnzPJsfqJi/lGYbtrf3ctN7e2uo/8wAcggCZQ8dj+X/dOPwmgAAAADCAcBgVjAVjiZdpiM8gKYBO4DR8NJ9P/bN/vn/+YQRW//7Uv//qWhy7687E/73JM63///+xHcERpVzGhqsAkaAT4qRtm8rkspbycR3MIdF40hTwZHgFhXlpCFkKghIybnBUKC6c8mHKWAjUEDfTEEaWGjvYxBWc8MjJlLXPa02mC4vOewEtnf86Uzd9aVIjI7OFCU0uxNXXPFBQh9NMMKFMYbT33LXpB/BpThx3+dk6gNABEhWmnay9qtkrM4bFAlJXM2e9T/8gfETjK1dRT9f1Ega8kGf/8b6/2D2gkTH73qYSWArHVM5R7LZ2vTT4wuketlSHIVcWiQRK3OhKbRA9GFn6s4pAiYYH4jh6MhGuZxP/7kmwVgAPKQU2FYQACTsxaPKQIAQ8NQTk5NoABLZrrtwSAAnQeLiOOGCxLEM4cmrTkGjMaS8rrmp20IrV9afbeq8y6Dlgw6BnaXTQtpaDyx1U2wz7H4ioy2jgJph6M3wD1Xc5se6X3fb5ALjetuqxM9UElAJugcg2xdVxrJociwQpcQizJM6nIr////h0XyTJY5cj3UmQmdv6097rRHsiI3e1n7Xn6USZO2Sh7Z0u+qXWbVrISiX6OlpmuLd4K7RYAADBDwCBBSAAA0RAWL2NUcwaodFgdksDcQn7BtD1JIpZ0glxFZd7lh8cpQJE8beaoFE2Hokkuj8oIEufKJkcRYypfol9IxcyK00kq2/yktIvmh41Nytaklo9X/JQkSaYoGsooJr1+tH/+dcRARkRlG3rOqJM/ywJNhoFDYSC4Wi0Wi0WAADHKXBCKYmZ8G4qAMFvSaXX+yZQwVQW/ximFkQ3r/70pd8L///jfiZ5j9r//x6kU8Cp4wOh0JCX0gy4YPI5VADPoAUKpMKbUMBCjCgImAWVL3GPpUUksCINEyYr/+5JsDo/zETAjtw0gAi+jRHHgiABAAAGkAAAAIAAANIAAAARRb//5SLAkGmwqCJKkFhSSocWRNKksxSKYLImrVRImtVQxpFkpeMY+oqxySIqDf//CGgpIJd/6imhRwMN6blkdFdSK4diQBhDEIUxCFCFEJv9SlmMZSm/ugYzlASwgV0Js0F4N6FHArB3//xTQp4v//8jorqVMQU1FMy45N1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV", 
sB64Dopiaza_Fingerplop_Mp3:"data:audio/mp3;base64,//uQbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAAIAAAOsAAgICAgICAgICAgICBAQEBAQEBAQEBAQEBgYGBgYGBgYGBgYGBggICAgICAgICAgICAoKCgoKCgoKCgoKCgoMDAwMDAwMDAwMDAwODg4ODg4ODg4ODg4OD///////////////8AAAA5TEFNRTMuOTcgAaoAAAAALhcAABSAJAVlTgAAgAAADrAEMJhfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQbAAAAzIazQ1p4AAtQUmqpIgBEcEHf7n6sBkdkPK3NyiCAIw4cw4NEcLCjQNjkVDtVDgFDGtz8fj6WjbDBUeZ1CZ8qDibpIqAEYBGAniZmXOwHIaA9ZO1HCTiGIYyQ0MQxQKx48iZfoYoFZE1d/HD3wfB8+Iz5Q5/EAIQQdP/fy8EDkMS/5cHwAACJWhSA9zn1EDkYIBhi0aNHOg4s+UlJPqOSjvxAAw/wQ/8oGHVn8Tn//rB/IYDAYDAcDsWiAMBAAAwPwIlMVjJxN//mJgGIpzYxgdK3hjLXjC0AKgwlEFS7/fA0mygNFjrwPlt0DG7mA0CHvwNEPUDAgZAx0AgM+HH/A46EAPjOIDGAMAWCIYhot/CyADAgNAYE4EAEDQKCCPf/KZPCABABCY6NX//KJDxlCZIxAjjM///+RYprMYTAYwGA4GA4GAwFAgA4AAAFRAygb//8+G9NRo7t//ABAYiLf/+A+A2/xOoX9AIb8ZcTsPsu/4lpPG5cMP/dE+dRP/oGqA//1yMThEWgTHMd29TxR605kUwoOOJPOs5//uSbAoIE3dO0x9owAIqQOos7AgBED01NM2xC8ixkWh0LAhlMUDLQp0xSLS3ZaMt21aJ1aJCWrXpfmczO1dKvONMtW81AlLbvnGZ/TVszPnGJXM55lq5qLG4S2ZztPqnmt9b5lq03TcOrzLTlftsz5z1sy0yxJKpB//9Kw2KGGkAAAAUADp7EvgazEoGYEpeFZGlKas7wKArT7MtkVRK7//////////apQl6R4DJZETpfPuomYIEEoIVgYkqmtpx8YAj8DUOjkH01YKr3j34bOLLLuMYXIar+7Pgeej5QhJzbI6LKGi5qFymwyGe4Vn5vnmbTZJtC5vm6fyLSnSX9UV6p0tHZBchXdpig7FgUCUPBeDT0GugsIg1RuhLEDwrgiHovcxl1v9+nfsAACQRMZ0mF3QUruxUZEsyXyG3YFgD+kV7pUv/1MFQKQUoo6s3W94nCsubojWNsoqoixak6TpvApkBRg4M7ADeZOvmNAbBoBl7BYIi7+phIEnLlFo9qkolcLnC4bTEm8y5I0hrrk7ei3RSxt/f10iNbP3s8nWMXv/7kmwlDAOtT04bOjIgL2FJyg8DJRC9EyZN8MiJAYRodBeIxM7n7f1JcJmtXymuSrROLjNVU5udrntsslh2s7XMM3nMno7ksueEguNHO/9wAAYKAAAACRKMDaLp7KZAV5fB14OJvQtEakrlgWBoHg6cDx3////////aLb2isihRSkOrHTIQgWAEGi4T6BggZ2MmZRhqEKd6NZMSA4TNq976SDjkco8JIAI1PCQlApCXYpFMgm72pBM5qSbPLGH0NnX2EzYX4wuLNKzl78Rxgadb/W+4N02B+SLgq6ZzN+vP4I6aWY8XTmQYWm9BR8AOLAa2xsqquYPMPgW76znu/uW7Wc7+sBkADYa6WSNhyCFGFJiyhycABg0Dr9YJPDYDPSgaQ/iqEgtFAFcph45KJHmTIo0SBOEE0ixscST01G22/E7HnPpVLIxG2MKDWpDwqouYYDgkFKgoOpAXRjVCkWBWUOpOAESNIBy2jQQo9ZR9DyyOxCfRr5VaCQWY7Uo4pU+LNpt+dfyNRbO5UY1CVhYyZiEws8YxYpdYMmZs6SKeSXf/+5JsLgwEGGZIi2YbckFB+cwsI2UPUZEgLhhtCUiW57QjDC0w7hDLKdbakKVgkWEbnUJ1PY3Km4NBP5Xu8yk7NXqdTn/njiGlgpoAABRO2UrBObETvEcmgoDaK3jQNwt1QoCPLIqE5pH3D988hbzsZt2PihRxl4uGGuL1VpKlLlFWpUGwLCK1BZchB0QDjwpDg8miyxKl+wACTA4IBo7FjeFgKHBYu7H51EGSjU0zblgedvCPNiYFKLyaJogoSyEWKzeamLbL7kJUkGXLCXkbNhBAmgoURytCNjLFQiztseczPek3gvJgUkN4eWqluZ9P4WP14cMy1hzPnPKfnWcLcOFWE+lmZDiA+u010rbAmdOw8AQCR8WL2iqaRWMw5rJlluxw0HT1LFlFJnwRhxG/CUl800PsUHMwTM4bHwKF6NnJi8h9q2RnQ36CXB9X0//tyUN7Vp4xT6wAgYH5wEhAVBnm7NeYinIBDDY3OJxq7Xp7ESH6LN1wYFoOwDBRqbALGpm6h4jhY/KRVSSebeb0akJCDstUjK9/EEmZnYVnmy5R//uSbCSIA5lISKtZGFJE4QndBMIXTMlLKywM1cD9FWZ0JgzIjpCTZXTd8bpMiPbHq1iYW8dCvS+4nM/fRJ8kQNx6h7t/0fNvjvesMVJTAxhjRxy2NJCz2mxpoEOrgFWMt7b7l/4X23aBMzHcl2Ao80cOWiDiI5bTG4z9+6y2nsOjN6fzP/83G9/wvT/c3rvut++8KSfZIBIxYMbhyQ0epgdBfCKxi/+63LVbtjPWW8+f3/xQEhulCkWeHPciRXY0rv5McY+f5FPnInOvELco74vaKV5L2H1FjWs2WUi5+Q680VAkkOI9KyMItvmGjWZNjQg6Zxa46//7QiADZXI64ggdyz4uEgDPJkFMqNLcjKZkLU7eEFd7PIiI4R+zHO+2+V4ZHEpPxKCApdbgOKpI3cnaOu//6uy6mgAG2LqlA6QHtMbVsBVMREoW+ByHTDqHqxXFysR/5ucTH6hFZoOTyZU9uscrq6Efe5QUBDIbFAKSUaU8fgZawwMHhZBGUczARAGiAwWeyRGgMDIMqXlM47t0jtKbRMds/6VBLn3Ug+J2cf/7kmw0gALXKcrKDxhAQ+C6PAgjE8oUezGmPGZI/oep9ACMPwODxC3ATE5IY6hjG2sKmrf76leN/fjJ18NoFsDpby/at02/GuJs+756He86kd0St7v/dBwHCAQAcbbUjbaAETVClz/o+RRNt4IQMZHrkhttCnufPIo8laBaTuRYaYYJACjolY/8bu2gJsHuv91nbVzBuiamUH7cCIv4VOq+zNFfb3e5aq2DIkjEs2kkbSIM0ob7zd0dmbKDIo9O/H2gefylByZY7VOoeGw+evSVFHrS+/23c9rtL1YEd+vxh66l7f+f/////BEOCGtsO2SmKnwNlRamiyCHgkiRmyf5URQRkv9JHIznbmhpdEGGNDKc763JIS9Kz4fwv7TPpF/l6925GrEimzjgqpRxDI2yV/X/xLr5/Q67z1PC7v0a57eq62OCP1CE0Vu2ttkjjGyqroWC3Oh5lczsavVTSIZixhWK2dAcXLKkzyN8A4TZkaQiKcjoSRyrKhhxAL1w6WUbijCgaEFINnrKIfz9i0CCgZlC8i1C1eXGziUgFwyZC6n/+5JsXAAC8kJJCw8YUkdoef0UI8kLxEskx7DASSgO5nQRGS3S86WO0vuPVG5KV06afybaIaLxx5TqaK5EChIScErf9UxVhwSdf6h2KpWXoNGe4FlyN+88W9zZtmokxUUli/fn2qy//fN/7C3alx1oJtwUXWuKEkCvacxK8YcnvYySuVEGq0Mc68OfJr79x/kJwfl0b3hMLGniyrWwYFgqy4um5z+Py4//KyycWOhcfllxr/8VYrvpvZYGiTLVwp9prlR2xLpVKZJK5BIgCDCRYYKNMTRJCS0Epa1EjS0FonPCRpcXlTGzLPGzTt9llZ/VHZyojlRblMlvojs6o7GRbt//+n9n9kVnKYKpHKis5VuyLf2fp/RVT+qKR2MUMCHOACmJqp22XZ82Wdv7DJlkcmuZSGrVBwEMCDoOJBkVJP2gIWNBUkaZ////oAopTEFNRTMuOTdVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//uSbHQP8zNoQIMGE3Itg7gxGANyAAABp
sB64Dopiaza_MouseOverMp3:"data:audio/mp3;base64,//tQZAAAAFwA4fUAAAgAAA0goAABEX2nRBh6AAAAADSDAAAADgAADwAAAAAuf+GBGB94Awi+D0AXyaHO8ZYho5v4ypDhzhW3+Q0c0VqQ4XN/4rYhouUQqOUK2//ELDGigQ+EY4PiDI3/+K6GRQtBD9guGBtIBwMDFDQGgv9av+WQMH3A0jkDAlgMmIBs8LSGAQyyOoUEOoDSWC2i35DQNzLJH/FzENGZIKUiBE8sumqjZNaP////6mnUpkoHd3iZh3+21gm2hkZGZBEmmBBNS//7YGQKCPOtRFD/BoACAAANIOAAAQltFymgj7dAAAA0gAAABFLUt3Z2dnQWtS1d2Z2qWpalLs7OzugtS1LVZ2dnQTQUtS1LdndnZNBalrUt2dnZBNBNS1LSSR3ZaC1qEIQudA7TYAJMI+cxNiav/UDC1VAyqq/6Wf2mmkYqqjpoquqqt9VQAtH/9gj///+vn/hl8sjw7/zI/WWpwy6Cl8H9k/I72yz///vZLmTLLZ//upX1RuoleYMAscsrwZPAIJAurA1+G5RT4fLCwq65v9eRAAAAF4H8rCH///381//keC2yai2+D/6t+vu5af+n1evb//hL4pIm7INggBwwIwrTLUYdMP/7IGQaDPIvRcroIva4AAANIAAAAQhZFypgi9ygAAA0gAAABMUGUwFAFCy6KjEHHikv//7f0j/6wBf///XzX+/mdMnsEw1gwevqMv1tTdE/9frk7//8p1+muqYioAgUAfBIXxiaNeGCWDsYAACqSzc4u+Uinf///J0AAAATb//IJ///+0BkBIjyXkZKaCLvIAAADSAAAAEJbRsroIucgAAANIAAAAT//f6XT5aMlyyvzoal2UlXUbSiMzrQ+tCN/56EZTv959wiEVn2YL9SjBATm4sbmVAHiQRwDPM7k/yiwJ7BOfDH//W4AXf/+kFf///WWeuT+UdGL1IoU2T8xWcpUMM3R5Wmf0Mpf/mNKWZ64/Wpq8Zcm6skMApZc7kQTGoXDAQiMyqGIejVuls4lLHg1//0KgAAAP/7QGQBiPJuRspoIeTwAAANIAAAAQixFSmhB55AAAA0gAAABLdv/oQX///Lvnp44/HBjLSfaNlMGtqCOSyeyj+cCH/5sBjJDz7Uqy+ITrW2kr/WgYKDhzGvKMA4JoJH9cSIwPGMbZCEQIC5Bn/+QAt///zDn//++341fy++m6Omf0dErdUTqCElfkculqL/85GF0z/XbtypuAmUwEIQKZGgoOBK4moxKMRqhLFceEBdn/+p+2oA//tAZACAAt5Hym0CoAgAAA0goAABBjUvM/gJgAAAADSDAAAAAAAUb/2AAfS/0Okrakgtukq66KkE0W1XSdHSXscR916Vf1JLR/6kaTosp9SSyKlwc4eg/UZIPZAUDIGARkBhFvAZZBgBoEE5hbEnhWpCE0VjE1U86HQ0RT//pAAAAAAYAcAgH/HvwAAAoAr+g36m/X9L3/t6X1/Zv///////oA2NlT/WHMN/8awCpiAVAAAHA///+xBkAo/wvEPSHwBACAAADSDgAAEAAAH+AAAAIAAANIAAAAT////////////////yhQEBARJVTEFNRTMuOThVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/7EGQYj/AAAGkAAAAIAAANIAAAAQAAAaQAAAAgAAA0gAAABFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV"};
Cvgr.Func = {};
Cvgr.Objs = {};
Cvgr.Vars = {bFlagTipTopTest:!1, bSoundLibraryFailed:!1, bSoundLibraryLoaded:!1, bSoundLibraryLoading:!1, bSoundLibraryReady:!1, bTemplateSearchFinished:!1, fNoise:null, iTimeStart:0, iTimeStartMs:0};
Cvgr.Vars.iTimeStart = new Date;
Cvgr.Vars.iTimeStart.getTime();
Cvgr.Vars.iTimeStartMs = Cvgr.Vars.iTimeStart.getMilliseconds();
Cvgr.Vars.radiobuttn = document.getElementById("i20140819o1822");
null !== Cvgr.Vars.radiobuttn && (Cvgr.Vars.radiobuttn.checked = !0);
Cvgr.Objs.Algo = function() {
  this.Ikon = this.Funktion = this.Context = this.Canvas = null;
  this.draw = function() {
  };
};
Cvgr.Objs.Ikon = function() {
  this.AlgoName = "";
  this.BgColor = "Transparent";
  this.Color = "Silver";
  this.Color2 = "Gray";
  this.Color3 = "SlateGray";
  this.Hertz = 0.1;
  this.Ide = null;
  this.ShiftY = this.ShiftX = 0;
  this.SizeFactor = 1;
  this.Width = this.Height = null;
  this.Angle = 0;
  this.CmdsHash = this.Canvas = null;
  this.Command = "";
  this.Context = null;
  this.DrawNumberLimit = 1;
  this.iDrawCount = 0;
  this.bIsDefaultSettingDone = !1;
  this.iFrameDelay = 0;
};
Cvgr.Objs.Line = function(a, b, c, d, e, f) {
  "undefined" === typeof f && (f = 2);
  this.X1 = a;
  this.Y1 = b;
  this.X2 = c;
  this.Y2 = d;
  this.Colo = Trekta.Util2.colorNameToHex(e);
  this.Width = f;
};
Cvgr.Objs.Pojnt = function(a, b) {
  this.ptX = a;
  this.ptY = b;
  this.Colhor = "Red";
  this.getIt = function() {
    return "Pojnt  " + this.x + "/" + this.Y + this.Colhor + " apple";
  };
};
Cvgr.Vars.icos = [];
Cvgr.Vars.iFrameNo = 0;
Cvgr.startCanvasGear = function() {
  window.onload = function() {
    var a = document.getElementById("i20140819o1821"), b = document.getElementById("i20140819o1822");
    a.onclick = Cvgr.Func.setRadiobutton;
    b.onclick = Cvgr.Func.setRadiobutton;
  };
  window.requestAnimFrame = function() {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function(a) {
      window.setTimeout(a, 1000 / 60);
    };
  }();
  for (var a = document.getElementsByTagName("canvas"), b = 0; b < a.length; b++) {
    if (!(-1 < a[b].outerHTML.indexOf("skipthis"))) {
      var c = new Cvgr.Objs.Ikon;
      c.Canvas = a[b];
      c.Context = a[b].getContext("2d");
      c.Ide = a[b].id;
      c.Width = c.Canvas.width;
      c.Height = c.Canvas.height;
      c.Command = c.Canvas.attributes["data-cvgr"].value;
      c.CmdsHash = Trekta.Utils.CmdlinParser.parse(c.Command);
      c.AlgoName = "algo" in c.CmdsHash && "" !== c.CmdsHash.algo ? c.CmdsHash.algo : "pulse";
      Cvgr.Vars.icos.push(c);
    }
  }
  a = null;
  Cvgr.Func.executeFrame();
};
Cvgr.Vars.aPiggyAlgoNames = [];
Cvgr.Vars.aPiggyModuleNamesTwo = [];
Cvgr.Vars.aPiggyCallbacks = [];
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(0);
}, function() {
  Cvgr.Func.pullbehind_onError(0);
}, function() {
  Cvgr.Func.pullbehind_onLoad(0);
}, function() {
  Cvgr.Func.pullbehind_onError(0);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(1);
}, function() {
  Cvgr.Func.pullbehind_onError(1);
}, function() {
  Cvgr.Func.pullbehind_onLoad(1);
}, function() {
  Cvgr.Func.pullbehind_onError(1);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(2);
}, function() {
  Cvgr.Func.pullbehind_onError(2);
}, function() {
  Cvgr.Func.pullbehind_onLoad(2);
}, function() {
  Cvgr.Func.pullbehind_onError(2);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(3);
}, function() {
  Cvgr.Func.pullbehind_onError(3);
}, function() {
  Cvgr.Func.pullbehind_onLoad(3);
}, function() {
  Cvgr.Func.pullbehind_onError(3);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(4);
}, function() {
  Cvgr.Func.pullbehind_onError(4);
}, function() {
  Cvgr.Func.pullbehind_onLoad(4);
}, function() {
  Cvgr.Func.pullbehind_onError(4);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(5);
}, function() {
  Cvgr.Func.pullbehind_onError(5);
}, function() {
  Cvgr.Func.pullbehind_onLoad(5);
}, function() {
  Cvgr.Func.pullbehind_onError(5);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(6);
}, function() {
  Cvgr.Func.pullbehind_onError(6);
}, function() {
  Cvgr.Func.pullbehind_onLoad(6);
}, function() {
  Cvgr.Func.pullbehind_onError(6);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(7);
}, function() {
  Cvgr.Func.pullbehind_onError(7);
}, function() {
  Cvgr.Func.pullbehind_onLoad(7);
}, function() {
  Cvgr.Func.pullbehind_onError(7);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(8);
}, function() {
  Cvgr.Func.pullbehind_onError(8);
}, function() {
  Cvgr.Func.pullbehind_onLoad(8);
}, function() {
  Cvgr.Func.pullbehind_onError(8);
}]);
Cvgr.Vars.aPiggyCallbacks.push([function() {
  Cvgr.Func.pullbehind_onLoad(9);
}, function() {
  Cvgr.Func.pullbehind_onError(9);
}, function() {
  Cvgr.Func.pullbehind_onLoad(9);
}, function() {
  Cvgr.Func.pullbehind_onError(9);
}]);
Cvgr.Vars.aPiggyFlags4Avail = [];
Cvgr.Vars.aPiggyFlags4OnError2 = [];
Cvgr.Vars.aPiggyFlags4OnLoad1 = [];
Cvgr.Vars.aPiggyFlags4OnError1 = [];
Cvgr.Vars.aPiggyIconArrays = [];
Cvgr.Vars.aPiggyTimers = [];
Cvgr.Vars.iFramesInLastTwoSeconds = 0;
Cvgr.Vars.iFramesPerTowSeconds = 0;
Cvgr.Vars.iMarkLastTwoSecond = 0;
Cvgr.Vars.iMarkLastTwoSecondFrame = 0;
Cvgr.Vars.nIncTurnsPerFrame = 0;
Cvgr.Vars.nTrueAngleTurns = 0;
Cvgr.Vars.sDebugPageHelper = "";
Cvgr.Vars.tHelper = null;
Cvgr.Func.examineAlgo = function(a, b) {
  var c = b.AlgoName;
  if (b.AlgoName in Cvgr.Algos) {
    Cvgr.Vars.aPiggyFlags4Avail[a] = !0;
  } else {
    for (var d = Cvgr.Vars.aPiggyIconArrays[a], e = 0; e < d.length; e++) {
      Cvgr.Vars.aPiggyIconArrays[a][e].AlgoName = "pulse", Cvgr.Vars.aPiggyIconArrays[a][e].CmdsHash.text = "Rpx " + e, Cvgr.Vars.aPiggyIconArrays[a][e].iFrameDelay = Cvgr.Vars.iFrameNo - 1, Cvgr.Func.initializeCanvas(Cvgr.Vars.aPiggyIconArrays[a][e]);
    }
  }
  Cvgr.Vars.sDebugPageHelper += "<br /> — examineAlgo : piggy " + a + " &nbsp; onLoad = " + Cvgr.Vars.aPiggyFlags4OnLoad1[a] + " &nbsp; onError1 = " + Cvgr.Vars.aPiggyFlags4OnError1[a] + " &nbsp; onError2 = " + Cvgr.Vars.aPiggyFlags4OnError2[a] + " &nbsp; avail = " + Cvgr.Vars.aPiggyFlags4Avail[a] + " &nbsp; algo = " + c + " / " + b.AlgoName;
};
Cvgr.Func.executeFram_PrintInfoCanvas = function(a) {
  var b = document.getElementById(Cvgr.Vars.icos[a].Ide + ".info");
  if (null !== b) {
    var c = "<small>Canvas Debug Info :" + ("<br />iko.AlgoName = " + Cvgr.Vars.icos[a].AlgoName + " <br />frame no = " + Cvgr.Vars.iFrameNo + " <br />iko.Angle = " + Cvgr.Vars.icos[a].Angle.toFixed(9) + " <br />iko.Color = " + Cvgr.Vars.icos[a].Color + "<br />iko.Height = " + Cvgr.Vars.icos[a].Height + "<br />iko.Mode = " + (Cvgr.Vars.bFlagTipTopTest ? "Top" : "Tip") + "<br />iko.Width = " + Cvgr.Vars.icos[a].Width);
    for (var d in Cvgr.Vars.icos[a].CmdsHash) {
      if (Cvgr.Vars.icos[a].CmdsHash.hasOwnProperty(d)) {
        var e = Trekta.Utils.htmlEscape(Cvgr.Vars.icos[a].CmdsHash[d]);
        c += "<br /> [cmd] " + d + " = " + e;
      }
    }
    b.innerHTML = c + "</small>";
  }
};
Cvgr.Func.executeFram_PrintInfoPage = function(a, b, c) {
  var d = document.getElementById("Cvgr_DebugPageOutputArea");
  if (null !== d) {
    var e = "<b>CanvasGear Page Debug Info</b> :" + (" AlgoMode = " + (Cvgr.Vars.bFlagTipTopTest ? "Top" : "Tip") + "; ");
    e += " Frame number = " + Cvgr.Vars.iFrameNo + ";";
    e += "<br />Start time = " + Cvgr.Vars.iTimeStart + " = " + Cvgr.Vars.iTimeStart.valueOf() + ";";
    e = e + ("<br />Current time = " + a) + ("<br />Elapsed seconds (every two) = " + b + ";") + ("<br />Frames per seconds (total, average since start) = " + c.toFixed(9));
    e += "<br />Frames per seconds (for the last two seconds) = " + Cvgr.Vars.iFramesPerTowSeconds.toFixed(9);
    e += "<br />True angle for 1 Hz (turns) = " + Cvgr.Vars.nTrueAngleTurns.toFixed(9) + ";";
    e += "<br />Increment per frame (turns) = " + Cvgr.Vars.nIncTurnsPerFrame.toFixed(9) + ";";
    e += "<br />" + Cvgr.Vars.sDebugPageHelper;
    d.innerHTML = e;
  }
};
Cvgr.Func.executeFrame = function() {
  Cvgr.Vars.iFrameNo++;
  var a = new Date;
  a.getTime();
  var b = a - Cvgr.Vars.iTimeStart, c = Cvgr.Vars.iFrameNo / b * 1000;
  b = 2 * Math.floor(b / 2000);
  Cvgr.Vars.iMarkLastTwoSecond < b && (Cvgr.Vars.iMarkLastTwoSecond = b, Cvgr.Vars.iFramesInLastTwoSeconds = Cvgr.Vars.iFrameNo - Cvgr.Vars.iMarkLastTwoSecondFrame, Cvgr.Vars.iFramesPerTowSeconds = (Cvgr.Vars.iFrameNo - Cvgr.Vars.iMarkLastTwoSecondFrame) / 2, Cvgr.Vars.iMarkLastTwoSecondFrame = Cvgr.Vars.iFrameNo);
  0.001 > Cvgr.Vars.iFramesPerTowSeconds && (Cvgr.Vars.iFramesPerTowSeconds = 2 * c);
  Cvgr.Vars.nTrueAngleTurns += 1 / Cvgr.Vars.iFramesPerTowSeconds;
  1 < Cvgr.Vars.nTrueAngleTurns && --Cvgr.Vars.nTrueAngleTurns;
  Cvgr.Vars.nIncTurnsPerFrame = 1 / Cvgr.Vars.iFramesPerTowSeconds;
  Cvgr.Func.executeFram_PrintInfoPage(a, b, c);
  for (a = 0; a < Cvgr.Vars.icos.length; a++) {
    if (c = Cvgr.Vars.icos[a], !(0 < c.DrawNumberLimit && Cvgr.Vars.iFrameNo - c.iFrameDelay > c.DrawNumberLimit)) {
      if (Cvgr.Func.executeFram_PrintInfoCanvas(a), b = c.AlgoName, b in Cvgr.Algos && ("Template" !== b || Cvgr.Vars.bTemplateSearchFinished) || c.bIsDefaultSettingDone) {
        c.bIsDefaultSettingDone || Cvgr.Func.initializeCanvas(c);
        try {
          Cvgr.Algos[b].executeAlgorithm(c);
        } catch (h) {
          Cvgr.Vars.sDebugPageHelper += "<br /> [Err 20190329°0412] ↯ executeAlgorithm failed :Ide = " + c.Ide + " algo = " + b + " (should never happen)";
        }
      } else {
        var d = Cvgr.Vars.aPiggyAlgoNames.indexOf(b);
        if (0 <= d) {
          2 > Cvgr.Vars.iFrameNo && Cvgr.Vars.aPiggyIconArrays[d].push(c);
        } else {
          if (Cvgr.Vars.aPiggyAlgoNames.length > Cvgr.Vars.aPiggyCallbacks.length - 1) {
            Cvgr.Vars.sDebugPageHelper += "<br />*** Prefabricated callbacks finished : " + Cvgr.Vars.aPiggyAlgoNames.length, c.AlgoName = "pulse", c.CmdsHash.text = "Substitute";
          } else {
            var e = Trekta.Utils.retrieveScriptFolderAbs("/canvasgear.combined.js");
            "" === e && (e = Trekta.Utils.retrieveScriptFolderAbs("/canvasgear.js"));
            d = e + "/riders/canvasgear." + b + ".js";
            e = e + "/canvasgear." + b + ".js";
            var f = Cvgr.Vars.aPiggyAlgoNames.length;
            Cvgr.Vars.aPiggyAlgoNames.push(b);
            var g = [];
            g.push(c);
            Cvgr.Vars.aPiggyIconArrays.push(g);
            Cvgr.Vars.aPiggyFlags4Avail.push(!1);
            Cvgr.Vars.aPiggyFlags4OnError2.push(!1);
            Cvgr.Vars.aPiggyFlags4OnLoad1.push(!1);
            Cvgr.Vars.aPiggyFlags4OnError1.push(!1);
            Cvgr.Vars.aPiggyTimers.push(setTimeout(Cvgr.Func.examineAlgo, 1444, Cvgr.Vars.aPiggyTimers.length, Cvgr.Vars.icos[a]));
            Cvgr.Vars.aPiggyModuleNamesTwo.push(e);
            Cvgr.Vars.sDebugPageHelper += "<br /> — pullScriptBehind " + f + " " + b;
            Trekta.Utils.pullScriptBehind(d, Cvgr.Vars.aPiggyCallbacks[f][0], Cvgr.Vars.aPiggyCallbacks[f][1]);
          }
        }
      }
    }
  }
  window.requestAnimFrame(Cvgr.Func.executeFrame);
};
Cvgr.Func.initializeCanvas = function(a) {
  var b = {algo:"AlgoName", bgcolor:"BgColor", color:"Color", color2:"Color2", color3:"Color3", height:"Height", hertz:"Hertz", shiftx:"ShiftX", shifty:"ShiftY", width:"Width"}, c = Cvgr.Algos[a.AlgoName].defaultProperties, d;
  for (d in c) {
    c.hasOwnProperty(d) && (a[d] = c[d]);
  }
  for (var e in a.CmdsHash) {
    a.CmdsHash.hasOwnProperty(e) && "algo" !== e && (c = e, e in b && (c = b[e]), a[c] = a.CmdsHash[e]);
  }
  b = a.AlgoName;
  "pickupOnKeyDown" in Cvgr.Algos[b] && (document.onkeydown = Cvgr.Algos[b].pickupOnKeyDown);
  "pickupOnMouseMove" in Cvgr.Algos[b] && (a.Canvas.onmousemove = Cvgr.Algos[b].pickupOnMouseMove);
  "pickupOnMouseDown" in Cvgr.Algos[b] && (a.Canvas.onmousedown = Cvgr.Algos[b].pickupOnMouseDown);
  "pickupOnMouseUp" in Cvgr.Algos[b] && (a.Canvas.onmouseup = Cvgr.Algos[b].pickupOnMouseUp);
  "pickupOnTouchMove" in Cvgr.Algos[b] && (a.Canvas.ontouchmove = Cvgr.Algos[b].pickupOnTouchMove);
  "pickupOnTouchStart" in Cvgr.Algos[b] && (a.Canvas.ontouchstart = Cvgr.Algos[b].pickupOnTouchStart);
  "yes" === a.PlaySound && (Cvgr.Vars.bSoundLibraryLoading = !0, b = Trekta.Utils.retrieveScriptFolderAbs("/canvasgear.combined.js"), "" === b && (b = Trekta.Utils.retrieveScriptFolderAbs("/canvasgear.js")), Trekta.Utils.pullScriptBehind(b + "/libs/howler/howler.min.js", Cvgr.Func.pullbehind_soundOnLoad("howler"), Cvgr.Func.pullbehind_soundOnError("howler")));
  a.bIsDefaultSettingDone = !0;
};
Cvgr.Func.pullbehind_onError = function(a) {
  if (!1 === Cvgr.Vars.aPiggyFlags4OnError1[a]) {
    Cvgr.Vars.aPiggyFlags4OnError1[a] = !0, Trekta.Utils.pullScriptBehind(Cvgr.Vars.aPiggyModuleNamesTwo[a], Cvgr.Vars.aPiggyCallbacks[a][0], Cvgr.Vars.aPiggyCallbacks[a][1]), Cvgr.Vars.sDebugPageHelper += "<br /> — pullScript_Second : &nbsp; piggy " + a + ' &nbsp; "' + Cvgr.Vars.aPiggyAlgoNames[a] + '" &nbsp; onload = ' + Cvgr.Vars.aPiggyFlags4OnLoad1[a] + " &nbsp; onerror1 = " + Cvgr.Vars.aPiggyFlags4OnError1[a] + " &nbsp; onerror2 = " + Cvgr.Vars.aPiggyFlags4OnError2[a];
  } else {
    Cvgr.Vars.aPiggyFlags4OnError2[a] = !0;
    if (Cvgr.Vars.aPiggyAlgoNames[a] in Cvgr.Algos) {
      Cvgr.Vars.bTemplateSearchFinished = !0;
      Cvgr.Vars.aPiggyFlags4Avail[a] = !0;
      var b = Cvgr.Vars.aPiggyIconArrays[a];
      for (var c = 0; c < b.length; c++) {
        Cvgr.Vars.aPiggyIconArrays[a][c].CmdsHash.text = "Template intern " + c, Cvgr.Vars.aPiggyIconArrays[a][c].iFrameDelay = Cvgr.Vars.iFrameNo - 1, Cvgr.Func.initializeCanvas(Cvgr.Vars.aPiggyIconArrays[a][c]);
      }
    } else {
      for (b = Cvgr.Vars.aPiggyIconArrays[a], c = 0; c < b.length; c++) {
        Cvgr.Vars.aPiggyIconArrays[a][c].AlgoName = "pulse", Cvgr.Vars.aPiggyIconArrays[a][c].CmdsHash.text = "Rp " + c, Cvgr.Vars.aPiggyIconArrays[a][c].iFrameDelay = Cvgr.Vars.iFrameNo - 1, Cvgr.Func.initializeCanvas(Cvgr.Vars.aPiggyIconArrays[a][c]);
      }
    }
    Cvgr.Vars.sDebugPageHelper += "<br /> — pullbehind_onError : &nbsp; piggy " + a + ' &nbsp; "' + Cvgr.Vars.aPiggyAlgoNames[a] + '" &nbsp; onload = ' + Cvgr.Vars.aPiggyFlags4OnLoad1[a] + " &nbsp; onerror1 = " + Cvgr.Vars.aPiggyFlags4OnError1[a] + " &nbsp; onerror2 = " + Cvgr.Vars.aPiggyFlags4OnError2[a];
  }
};
Cvgr.Func.pullbehind_onLoad = function(a) {
  Cvgr.Vars.aPiggyFlags4OnLoad1[a] = !0;
  var b = Cvgr.Vars.aPiggyAlgoNames[a];
  Cvgr.Vars.sDebugPageHelper += "<br /> — pullbehind_onLoad : piggy " + a;
  a = Cvgr.Vars.aPiggyIconArrays[a];
  Cvgr.Vars.sDebugPageHelper += ' &nbsp; algo "' + a[0].AlgoName + '" &nbsp; count = ' + a.length;
  for (var c = 0; c < a.length; c++) {
    var d = a[c];
    Cvgr.Vars.sDebugPageHelper += "<br /> — &nbsp; &nbsp; &nbsp; &nbsp; iko.Ide = " + d.Ide;
    b in Cvgr.Algos && (d.bIsDefaultSettingDone || Cvgr.Func.initializeCanvas(d), d.iFrameDelay = Cvgr.Vars.iFrameNo - 1, Cvgr.Algos[d.AlgoName].executeAlgorithm(d));
  }
};
Cvgr.Func.pullbehind_soundOnError = function(a) {
  "soundman2" !== a && "howler" !== a ? alert('Theoretically not possible:\n\nPullbehind onError wanted = "' + a + '"') : Cvgr.Vars.bSoundLibraryFailed = !0;
};
Cvgr.Func.pullbehind_soundOnLoad = function(a) {
  "soundman2" !== a && "howler" !== a ? alert('Theoretically not possible:\n\nPullbehind onLoad wanted = "' + a + '"') : (Cvgr.Vars.bSoundLibraryLoaded = !0, Cvgr.Vars.tHelper = setTimeout(Cvgr.Func.pullbehind_soundOnLoaded, 1456));
};
Cvgr.Func.pullbehind_soundOnLoaded = function() {
  Cvgr.Vars.sound = new Howl({src:[Cvgr.Const.sB64Dopiaza_MouseOverMp3], loop:!1});
  Cvgr.Vars.bSoundLibraryReady = !0;
};
Cvgr.Func.setRadiobutton = function() {
  var a = "[Debug 20140926°1131]\n\nNow radio-button algo-mode = ";
  document.FormAlgoMode.AlgoMode[0].checked ? (Cvgr.Vars.bFlagTipTopTest = !1, a += document.FormAlgoMode.AlgoMode[0].value) : (Cvgr.Vars.bFlagTipTopTest = !0, a += document.FormAlgoMode.AlgoMode[1].value);
  Cvgr.Const.bShow_Debug_Dialogs && alert(a);
};
Cvgr = Cvgr || {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Algos.Ballist = {Hit:function(a, b) {
  this.ringval = a;
  this.minutes = b;
  a = this.minutes / 60 * Math.PI * 2;
  a += 1.5 * Math.PI;
  b = 10.9 - this.ringval;
  var c = b * Math.sin(a) * 0.20;
  this.X = b * Math.cos(a) * 0.20;
  this.Y = c;
}, Ring:function(a, b, c, d) {
  null === a && (a = "?");
  null === b && (b = 0.987);
  null === c && (c = "gray");
  null === d && (d = "white");
  this.ringname = a;
  this.radiusAbs = b;
  this.colorRing = c;
  this.colorSpace = d;
}, Target:function() {
  this.Diameter = 0.1;
  this.Shortnam = this.Naame = "<n/a>";
  this.rings = [];
}, executeAlgo_drawDiagonal:function(a) {
  var b = a.Height, c = b - 11, d = a.Width - 11;
  b -= 11;
  a.Context.beginPath();
  a.Context.moveTo(11, c);
  a.Context.lineTo(d, b);
  a.Context.moveTo(11, b + 5.5);
  a.Context.lineTo(11, b - 5.5);
  a.Context.moveTo(d, b + 5.5);
  a.Context.lineTo(d, b - 5.5);
  a.Context.strokeStyle = a.Color;
  a.Context.fillStyle = a.Color;
  a.Context.fill();
  a.Context.closePath();
  a.Context.strokeStyle = "turquoise";
  a.Context.lineWidth = 3;
  a.Context.stroke();
  a.Context.font = "1.2em Arial";
  a.Context.fillStyle = "turquoise";
  a.Context.fillText("~0.11 m", 16.5, c - 5.5);
  a.CmdsHash.text && (a.Context.fillStyle = "#102030", a.Context.font = "1.2em Arial", a.Context.fillText(a.CmdsHash.text, 10, 20));
}, executeAlgo_getSeries:function(a) {
  var b = [];
  if ("undefined" === typeof a || 1 > a.length) {
    a = new Cvgr.Algos.Ballist.Hit(10.7, 55), b.push(a), a = new Cvgr.Algos.Ballist.Hit(9.3, 43), b.push(a), a = new Cvgr.Algos.Ballist.Hit(2.1, 0), b.push(a), a = new Cvgr.Algos.Ballist.Hit(2.2, 1), b.push(a), a = new Cvgr.Algos.Ballist.Hit(2.3, 3), b.push(a), a = new Cvgr.Algos.Ballist.Hit(2.4, 6), b.push(a), a = new Cvgr.Algos.Ballist.Hit(2.5, 10), b.push(a), a = new Cvgr.Algos.Ballist.Hit(2.6, 20), b.push(a), a = new Cvgr.Algos.Ballist.Hit(2.7, 30), b.push(a), a = new Cvgr.Algos.Ballist.Hit(2.8, 
    40), b.push(a), a = new Cvgr.Algos.Ballist.Hit(2.9, 50), b.push(a);
  } else {
    a = a.split(" ");
    for (var c = 0; c < a.length; c++) {
      var d = a[c].split("/");
      d = new Cvgr.Algos.Ballist.Hit(d[0], d[1]);
      b.push(d);
    }
  }
  return b;
}, executeAlgo_getTarget:function(a) {
  var b = new Cvgr.Algos.Ballist.Target;
  "kkspp" === a ? (b.Diameter = 0.500, b.Naame = "Sportpistole 25 m Präzision", b.Shortnam = a, b.rings.push(new Cvgr.Algos.Ballist.Ring("10", 0.025, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("9", 0.050, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("8", 0.075, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("7", 0.100, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("6", 0.125, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 
  0.150, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 0.175, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.200, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 0.225, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 0.250, "blue", "white"))) : "kkspd" === a ? (b.Diameter = 0.500, b.Naame = "Sportpistole 25 m Duell", b.Shortnam = a, b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 0.050, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 
  0.100, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.150, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 0.200, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 0.250, "blue", "black"))) : "lg10m" === a ? (b.Diameter = 0.050, b.Naame = "Luftgewehr 10 m", b.Shortnam = a, b.rings.push(new Cvgr.Algos.Ballist.Ring("10", 0.0025, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("9", 0.0050, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("8", 
  0.0075, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("7", 0.0100, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("6", 0.0125, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 0.0150, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 0.0175, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.0200, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 0.0225, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 
  0.0250, "blue", "white"))) : "lgdt10m" === a ? (b.Diameter = 0.0100, b.Naame = "Deutsche Luftgewehr-Scheibe 10 m", b.Shortnam = a, b.rings.push(new Cvgr.Algos.Ballist.Ring("10", 0.0005, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("9", 0.0010, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("8", 0.0015, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("7", 0.0020, "blue", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("6", 0.0025, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 
  0.0030, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 0.0035, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.0040, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 0.0045, "blue", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 0.0050, "blue", "white"))) : (b.Diameter = 0.1500, b.Naame = "Luftpistole 10 m", b.Shortnam = "lupi10m", b.rings.push(new Cvgr.Algos.Ballist.Ring("10", 0.0055, "black", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("9", 
  0.0135, "black", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("8", 0.0215, "gray", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("7", 0.0295, "gray", "black")), b.rings.push(new Cvgr.Algos.Ballist.Ring("6", 0.0375, "gray", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("5", 0.0455, "gray", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("4", 0.0535, "red", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("3", 0.0615, "red", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("2", 
  0.0695, "red", "white")), b.rings.push(new Cvgr.Algos.Ballist.Ring("1", 0.0775, "red", "white")));
  return b;
}, executeAlgorithm:function(a) {
  var b = Cvgr.Algos.Ballist.executeAlgo_getTarget(), c = Cvgr.Algos.Ballist.executeAlgo_getSeries(a.CmdsHash.series);
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = a.BgColor;
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  var d = (a.Width + a.Height) / 4, e = d, f = d;
  null !== a.ShiftX && (e = d + parseInt(a.ShiftX, 10));
  null !== a.ShiftY && (f = d + parseInt(a.ShiftY, 10));
  for (var g = 0; g < b.rings.length; g++) {
    var h = d * b.rings[g].radiusAbs * 12;
    a.Context.beginPath();
    a.Context.arc(e, f, h, 0, 2 * Math.PI, !1);
    a.Context.closePath();
    a.Context.strokeStyle = Trekta.Util2.colorNameToHex(b.rings[g].colorRing);
    a.Context.lineWidth = 1;
    a.Context.stroke();
  }
  for (b = 0; b < c.length; b++) {
    nRadius2 = 6, e = d + 50 * c[b].X + parseInt(a.ShiftX, 10), f = d + 50 * c[b].Y + parseInt(a.ShiftY, 10), a.Context.beginPath(), a.Context.arc(e, f, nRadius2, 0, 2 * Math.PI, !1), a.Context.closePath(), a.Context.strokeStyle = "#4169e1", a.Context.lineWidth = 1, a.Context.stroke();
  }
  Cvgr.Algos.Ballist.executeAlgo_drawDiagonal(a);
  a.Angle += Cvgr.Vars.nIncTurnsPerFrame * Math.PI * a.Hertz;
  a.Angle > 4 * Math.PI && (a.Angle -= 4 * Math.PI);
}, defaultProperties:{}};
Cvgr = Cvgr || {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Algos.Template = Cvgr.Algos.Template || {};
Cvgr.Algos.Template.executeAlgorithm = function(a) {
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = a.BgColor;
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  var b = a.Width / 2, c = a.Height / 2;
  b = null !== a.ShiftX ? b + parseInt(a.ShiftX, 10) : b;
  c = null !== a.ShiftY ? c + parseInt(a.ShiftY, 10) : c;
  var d = (a.Width + a.Height) / 4 * 0.66;
  a.Context.beginPath();
  a.Context.arc(b, c, d, 0.1 + a.Angle, 1.6 * Math.PI + a.Angle, !1);
  a.Context.strokeStyle = a.Color;
  a.Context.lineWidth = 6;
  a.Context.stroke();
  b = "Template intern";
  a.CmdsHash.text && (b = a.CmdsHash.text);
  a.Context.fillStyle = "MediumVioletRed";
  a.Context.font = "0.9em Arial";
  a.Context.fillText(b, 3, 21);
  a.Angle += Cvgr.Vars.nIncTurnsPerFrame * Math.PI * a.Hertz;
  a.Angle > 2 * Math.PI && (a.Angle -= 2 * Math.PI);
};
Cvgr.Algos.Template.defaultProperties = {DrawNumberLimit:0};
Cvgr = Cvgr || {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Algos.develop = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2;
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = a.BgColor;
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  var c = [], d = new Cvgr.Objs.Line(3, 3, b - 3, 3, a.Color), e = new Cvgr.Objs.Line(4, b - 4, b - 4, b - 4, a.Color2);
  b = new Cvgr.Objs.Line(5, b - 7, b - 5, 7, a.Color3);
  c.push(d);
  c.push(e);
  c.push(b);
  for (d = 0; d < c.length; d++) {
    a.Context.beginPath(), a.Context.moveTo(c[d].X1, c[d].Y1), a.Context.lineTo(c[d].X2, c[d].Y2), a.Context.lineWidth = 3, a.Context.strokeStyle = c[d].Colo, a.Context.stroke();
  }
}, defaultProperties:{BgColor:"LightCyan", Color:"LightCoral", Color2:"PaleGreen", Color3:"LightBlue"}};
Cvgr = Cvgr || {};
Cvgr.Algos = Cvgr.Algos || {};
Cvgr.Algos.oblongrose = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2 / 2;
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.strokeStyle = a.Color;
  a.Context.fillStyle = "Yellow";
  a.Context.translate(b, b);
  for (var c, d = 0, e = 0; 16 > e; e++) {
    c = 1.7 * Math.PI / 16, a.Context.rotate(c), d += c, a.Context.strokeRect(0.1 * b, 0.1 * b, 0.3 * b, 0.7 * b);
  }
  a.Context.rotate(-1 * d);
  a.Context.translate(-1 * b, -1 * b);
}, defaultProperties:{BgColor:"LightCyan", Color:"LightCoral", Color2:"PaleGreen", Color3:"LightBlue", DrawNumberLimit:5}};
Cvgr.Algos.pulse = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2;
  b = b / 2 * a.SizeFactor;
  var c = a.Width / 2 + parseInt(a.ShiftX, 9), d = a.Height / 2 + parseInt(a.ShiftY, 9);
  b *= Math.abs(Math.cos(a.Angle));
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = "#f0f0f0";
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.beginPath();
  a.Context.arc(c, d, b, 0, 2 * Math.PI, !1);
  a.Context.closePath();
  a.Context.fillStyle = a.Color;
  a.Context.fill();
  a.CmdsHash.text && (c = a.CmdsHash.text, a.Context.fillStyle = "MediumVioletRed", a.Context.font = "0.9em Arial", a.Context.fillText(c, 3, 21));
  a.Angle += Cvgr.Vars.nIncTurnsPerFrame * Math.PI * a.Hertz;
  a.Angle > Math.PI && (a.Angle -= Math.PI);
}, defaultProperties:{BgColor:"LightCyan", DrawNumberLimit:0}};
Cvgr.Algos.triangle = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2, c = 0.5 * b, d = 0.01 * b, e = 0.8 * b, f = 0.9 * b, g = 0.2 * b;
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.translate(b / 2, b / 2);
  a.Context.rotate(4 * Cvgr.Vars.nIncTurnsPerFrame * a.Hertz);
  a.Context.translate(-b / 2, -b / 2);
  a.Context.fillStyle = a.BgColor;
  try {
    a.Context.fillRect(0, 0, a.Width, a.Height);
  } catch (h) {
    Cvgr.Const.bShow_Debug_Dialogs && alert('[debug 20140901°0913]\nException "' + h + '"');
  }
  a.Context.beginPath();
  try {
    a.Context.moveTo(c, d);
  } catch (h) {
    Cvgr.Const.bShow_Debug_Dialogs && alert('[debug 20140901°0932]\nException "' + h + '"');
  }
  a.Context.lineTo(e, f);
  a.Context.lineTo(g, f);
  a.Context.fillStyle = a.Color;
  a.Context.fill();
  a.Context.closePath();
}, defaultProperties:{BgColor:"LightCyan", Color:"LightCoral", Color2:"PaleGreen", Color3:"LightBlue", DrawNumberLimit:0}};
Cvgr.Algos.triangulum = {executeAlgorithm:function(a) {
  var b = (a.Width + a.Height) / 2;
  var c = Math.sin(a.Angle) * (b - 4) / 2 + b / 2;
  a.Context.clearRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.fillStyle = a.BgColor;
  a.Context.fillRect(0, 0, a.Canvas.width, a.Canvas.height);
  a.Context.beginPath();
  a.Context.moveTo(3, 3);
  a.Context.lineTo(b - 3, 3);
  a.Context.lineTo(c, b - 5);
  a.Context.fillStyle = a.Color;
  a.Context.fill();
  a.Context.closePath();
  a.Context.lineWidth = 2;
  a.Context.strokeStyle = a.Color2;
  a.Context.stroke();
  a.Context.beginPath();
  a.Context.moveTo(2, b - 2);
  a.Context.lineTo(b - 2, b - 2);
  a.Context.lineWidth = 3;
  a.Context.strokeStyle = a.Color3;
  a.Context.stroke();
  a.Angle += Cvgr.Vars.nIncTurnsPerFrame * Math.PI * a.Hertz;
  a.Angle > 4 * Math.PI && (a.Angle -= 4 * Math.PI);
}, defaultProperties:{DrawNumberLimit:0}};
var Trekta = Trekta || {};
Trekta.Util2 = Trekta.Util2 || {};
Trekta.Util2.Webcolors = function() {
  this.pink = "#ffc0cb";
  this.lightpink = "#ffb6c1";
  this.hotpink = "#ff69b4";
  this.deeppink = "#ff1493";
  this.palevioletred = "#db7093";
  this.mediumvioletred = "#c71585";
  this.lightsalmon = "#ffa07a";
  this.salmon = "#fa8072";
  this.darksalmon = "#e9967a";
  this.lightcoral = "#f08080";
  this.indianred = "#cd5c5c";
  this.crimson = "#dc143c";
  this.firebrick = "#b22222";
  this.darkred = "#8b0000";
  this.red = "#ff0000";
  this.orangered = "#ff4500";
  this.tomato = "#ff6347";
  this.coral = "#ff7f50";
  this.darkorange = "#ff8c00";
  this.orange = "#ffa500";
  this.yellow = "#ffff00";
  this.lightyellow = "#ffffe0";
  this.lemonchiffon = "#fffacd";
  this.lightgoldenrodyellow = "#fafad2";
  this.papayawhip = "#ffefd5";
  this.moccasin = "#ffe4b5";
  this.peachpuff = "#ffdab9";
  this.palegoldenrod = "#eee8aa";
  this.khaki = "#f0e68c";
  this.darkkhaki = "#bdb76b";
  this.gold = "#ffd700";
  this.cornsilk = "#fff8dc";
  this.blanchedalmond = "#ffebcd";
  this.bisque = "#ffe4c4";
  this.navajowhite = "#ffdead";
  this.wheat = "#f5deb3";
  this.burlywood = "#deb887";
  this.tan = "#d2b48c";
  this.rosybrown = "#bc8f8f";
  this.sandybrown = "#f4a460";
  this.goldenrod = "#daa520";
  this.darkgoldenrod = "#b8860b";
  this.peru = "#cd853f";
  this.chocolate = "#d2691e";
  this.saddlebrown = "#8b4513";
  this.sienna = "#a0522d";
  this.brown = "#a52a2a";
  this.maroon = "#800000";
  this.darkolivegreen = "#556b2f";
  this.olive = "#808000";
  this.olivedrab = "#6b8e23";
  this.yellowgreen = "#9acd32";
  this.limegreen = "#32cd32";
  this.lime = "#00ff00";
  this.lawngreen = "#7cfc00";
  this.chartreuse = "#7fff00";
  this.greenyellow = "#adff2f";
  this.springgreen = "#00ff7f";
  this.mediumspringgreen = "#00fa9a";
  this.lightgreen = "#90ee90";
  this.palegreen = "#98fb98";
  this.darkseagreen = "#8fbc8f";
  this.mediumseagreen = "#3cb371";
  this.seagreen = "#2e8b57";
  this.forestgreen = "#228b22";
  this.green = "#008000";
  this.darkgreen = "#006400";
  this.mediumaquamarine = "#66cdaa";
  this.cyan = this.aqua = "#00ffff";
  this.lightcyan = "#e0ffff";
  this.paleturquoise = "#afeeee";
  this.aquamarine = "#7fffd4";
  this.turquoise = "#40e0d0";
  this.mediumturquoise = "#48d1cc";
  this.darkturquoise = "#00ced1";
  this.lightseagreen = "#20b2aa";
  this.cadetblue = "#5f9ea0";
  this.darkcyan = "#008b8b";
  this.teal = "#008080";
  this.lightsteelblue = "#b0c4de";
  this.powderblue = "#b0e0e6";
  this.lightblue = "#add8e6";
  this.skyblue = "#87ceeb";
  this.lightskyblue = "#87cefa";
  this.deepskyblue = "#00bfff";
  this.dodgerblue = "#1e90ff";
  this.cornflowerblue = "#6495ed";
  this.steelblue = "#4682b4";
  this.royalblue = "#4169e1";
  this.blue = "#0000ff";
  this.mediumblue = "#0000cd";
  this.darkblue = "#00008b";
  this.navy = "#000080";
  this.midnightblue = "#191970";
  this.lavender = "#e6e6fa";
  this.thistle = "#d8bfd8";
  this.plum = "#dda0dd";
  this.violet = "#ee82ee";
  this.orchid = "#da70d6";
  this.magenta = this.fuchsia = "#ff00ff";
  this.mediumorchid = "#ba55d3";
  this.mediumpurple = "#9370db";
  this.blueviolet = "#8a2be2";
  this.darkviolet = "#9400d3";
  this.darkorchid = "#9932cc";
  this.darkmagenta = "#8b008b";
  this.purple = "#800080";
  this.indigo = "#4b0082";
  this.darkslateblue = "#483d8b";
  this.slateblue = "#6a5acd";
  this.mediumslateblue = "#7b68ee";
  this.white = "#ffffff";
  this.snow = "#fffafa";
  this.honeydew = "#f0fff0";
  this.mintcream = "#f5fffa";
  this.azure = "#f0ffff";
  this.aliceblue = "#f0f8ff";
  this.ghostwhite = "#f8f8ff";
  this.whitesmoke = "#f5f5f5";
  this.seashell = "#fff5ee";
  this.beige = "#f5f5dc";
  this.oldlace = "#fdf5e6";
  this.floralwhite = "#fffaf0";
  this.ivory = "#fffff0";
  this.antiquewhite = "#faebd7";
  this.linen = "#faF0e6";
  this.lavenderblush = "#fff0f5";
  this.mistyrose = "#ffe4e1";
  this.gainsboro = "#dcdcdc";
  this.lightgrey = "#d3d3d3";
  this.silver = "#c0c0c0";
  this.darkgray = "#a9a9a9";
  this.gray = "#808080";
  this.dimgray = "#696969";
  this.lightslategray = "#778899";
  this.slategray = "#708090";
  this.darkslategray = "#2f4f4f";
  this.black = "#000000";
  this.rebeccapurple = "#663399";
  this.verydarkviolett = "#d000d0";
};
Trekta.Util2.colorNameToHex = function(a) {
  var b = new Trekta.Util2.Webcolors;
  a = a.toLowerCase();
  return b[a] ? b[a] : "#C0C0C0";
};
Trekta = Trekta || {};
Trekta.Utils = Trekta.Utils || {getFileNameFull:function() {
  var a = document.location.href;
  a = a.substring(0, -1 === a.indexOf("?") ? a.length : a.indexOf("?"));
  return a = a.substring(0, -1 === a.indexOf("#") ? a.length : a.indexOf("#"));
}, getFilenamePlain:function() {
  var a = Trekta.Utils.getFileNameFull();
  -1 !== a.indexOf("/", a.length - 1) && (a += "index.html");
  a = a.split("/");
  return a = a[a.length - 1];
}, getXMLHttp:function() {
  if (Trekta.Utils.bIs_Browser_Explorer) {
    try {
      var a = new ActiveXObject("Msxml2.XMLHTTP");
    } catch (b) {
      try {
        a = new ActiveXObject("Microsoft.XMLHTTP");
      } catch (c) {
        return alert("Sorry, your browser does not support AJAX [message 20160613°0421]"), !1;
      }
    }
  } else {
    a = new XMLHttpRequest;
  }
  return a;
}, htmlEscape:function(a) {
  a = a.replace(/</g, "&lt;");
  return a = a.replace(/>/g, "&gt;");
}, isScriptAlreadyLoaded:function(a) {
  a = a.replace(/\./g, "\\.");
  a = new RegExp(a + "$", "");
  var b = document.getElementsByTagName("SCRIPT");
  if (b && 0 < b.length) {
    for (var c in b) {
      if (b[c].src && b[c].src.match(a)) {
        return !0;
      }
    }
  }
  return !1;
}, pullScriptBehind:function(a, b, c, d) {
  if (Trekta.Utils.bUseMinified) {
    var e = /.*\/highlight.pack.js$/.test(a), f = /.*\/showdown.min.js$/.test(a), g = /.*\/sitmapdaf.js$/.test(a), h = /.*\/tree.js$/.test(a);
    e || f || g || h || (a = a.replace(/\.js$/, ".min.js"));
  }
  if (0 <= Trekta.Utils.aPulled.indexOf(a)) {
    b(a, d, !0);
  } else {
    e = document.getElementsByTagName("head")[0];
    f = document.createElement("script");
    f.type = "text/javascript";
    f.src = a;
    if ("undefined" !== typeof b) {
      var k = function() {
        b(a, d, !1);
      };
      f.onload = function() {
        Trekta.Utils.pullScript_onload(a, k);
      };
    }
    c = c || null;
    null !== c && (f.onerror = function() {
      c(a, d);
    });
    e.appendChild(f);
    return !0;
  }
}, pullScript_onload:function(a, b) {
  Trekta.Utils.aPulled.push(a);
  b();
}, readTextFile1:function(a, b) {
  var c = "", d = Trekta.Utils.getXMLHttp();
  b ? d.open("GET", a, !0) : d.open("GET", a, !1);
  d.onreadystatechange = function() {
    4 !== d.readyState || 200 !== d.status && 0 !== d.status || (c = d.responseText);
  };
  try {
    d.send(null);
  } catch (e) {
  }
  return c;
}, readTextFile2:function(a, b) {
  b = "undefined" === typeof b ? null : b;
  var c = Trekta.Utils.getXMLHttp();
  c.open("GET", a, !0);
  c.onreadystatechange = function() {
    4 !== c.readyState || 200 !== c.status && 0 !== c.status || b(c.responseText);
  };
  try {
    c.send(null);
  } catch (e) {
    var d = "<b>Sorry, some feature on this page does not work.</b>\n File <tt>" + a + "</tt> could not be read.\nYour browser said: <tt>" + e.message + "</tt>.";
    d = Trekta.Utils.bIs_Browser_Chrome && "file:" === location.protocol ? d + "\nYour browser seems to be Chrome, and this does not read files via file protocol.\nThere are two <b>solutions</b>: (1) Use a different browser, e.g. Firefox or IE\nor (2) view this page from <tt>localhost</tt> with a HTTP server." : Trekta.Utils.bIs_Browser_Firefox && "file:" === location.protocol ? d + "\nYour browser seems to be <b>Firefox</b>, and this does not read files\nwith a path going below the current directory via file protocol.\nThere are two <b>solutions</b>: (1) Use a different browser, e.g. Chrome or IE\nor (2)  view this page from <tt>localhost</tt> with a HTTP server." : 
    d + ("\n [info 20160622°0131] Failed reading file " + a + ".");
    b(d);
  }
}, retrieveScriptFolderAbs:function(a) {
  if (Trekta.Utils.bUseMinified) {
    var b = /.*\/highlight.pack.js$/.test(a), c = /.*\/showdown.min.js$/.test(a), d = /.*\/sitmapdaf.js$/.test(a), e = /.*\/tree.js$/.test(a);
    b || c || d || e || (a = a.replace(/\.js$/, ".min.js"));
  }
  b = a.replace(/\./g, "\\.") + "$";
  a = new RegExp(b, "");
  b = new RegExp("(.*)" + b, "");
  c = "";
  if ((d = document.getElementsByTagName("SCRIPT")) && 0 < d.length) {
    for (var f in d) {
      d[f].src && d[f].src.match(a) && (c = d[f].src.replace(b, "$1"));
    }
  }
  return c;
}, windowOnloadDaisychain:function(a) {
  if (window.onload) {
    var b = window.onload;
    window.onload = function() {
      b();
      a();
    };
  } else {
    window.onload = function() {
      a();
    };
  }
}, aPulled:[], bIs_Browser_Chrome:navigator.userAgent.match(/Chrome/) ? !0 : !1, bIs_Browser_Explorer:navigator.appName.match(/Explorer/) ? !0 : !1, bIs_Browser_Firefox:navigator.userAgent.match(/Firefox/) ? !0 : !1, bIs_Browser_Opera:navigator.userAgent.match(/(Opera)|(OPR)/) ? !0 : !1, bShow_Debug_Dialogs:!1, bToggle_FALSE:!1, bToggle_TRUE:!0, bUseMinified:!1};
Trekta.Utils.CmdlinParser = function() {
  Trekta.Utils.parse = function(a) {
    "undefined" === typeof a && (a = "");
    for (var b = [], c = "", d = "", e = 0; e < a.length; e++) {
      var f = a.charAt(e);
      " " === f && "" === c ? "" !== d && (b.push(d), d = "") : "=" === f && "" === c ? ("" !== d && (b.push(d), d = ""), b.push("=")) : "'" === f || '"' === f ? c = "" === c ? f : "" : d += f;
    }
    b.push(d);
    a = [];
    for (d = 0; d < b.length; d++) {
      "" !== b[d] && (c = b[d], a[c] = "<n/a>", "=" === b[d + 1] && (a[c] = b[d + 2], d++, d++));
    }
    return a;
  };
  return {parse:Trekta.Utils.parse};
}();
Trekta.Utils.windowOnloadDaisychain(Cvgr.startCanvasGear);

