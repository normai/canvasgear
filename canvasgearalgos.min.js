/*
 This module provides an algorithm for canvasgear.js.

 version : 0.1.7 — 20190330°0711
 license : GNU LGPL v3 or later (https://www.gnu.org/licenses/lgpl.html)
 copyright : (c) 2014 - 2019 Norbert C. Maier https://github.com/normai/canvasgear/
*/
var Cvgr = Cvgr || {};
Cvgr.Algs = Cvgr.Algs || {};
Cvgr.Algs.Bal = Cvgr.Algs.Bal || {};
Cvgr.Algs.Bal.Ring = function(c, a, b, d) {
  null === c && (c = "?");
  null === a && (a = 0.987);
  null === b && (b = "gray");
  null === d && (d = "white");
  this.ringname = c;
  this.radiusAbs = a;
  this.colorRing = b;
  this.colorSpace = d;
};
Cvgr.Algs.Bal.Target = function() {
  this.Diameter = 0.1;
  this.Shortnam = this.Naame = "<n/a>";
  this.rings = [];
};
Cvgr.Algs.Bal.Hit = function(c, a) {
  this.ringval = c;
  this.minutes = a;
  var b = this.minutes / 60 * Math.PI * 2;
  b += 1.5 * Math.PI;
  var d = 10.9 - this.ringval, e = d * Math.sin(b) * 0.20;
  this.X = d * Math.cos(b) * 0.20;
  this.Y = e;
};
Cvgr.Algs.iStep = 0;
Cvgr.Algs.Bal.algoBallist = function(c, a) {
  var b = c[a];
  if (!b.DrawOnlyOnce) {
    b.DrawOnlyOnce = !0;
    var d = (+b.Width + +b.Height) / 2, e = Cvgr.Algs.Bal.algoBallist_getTarget(), l = Cvgr.Algs.Bal.algoBallist_getSeries(b.CmdHash2.series);
    b.Context.clearRect(0, 0, b.Canvas.width, b.Canvas.height);
    b.Context.fillStyle = b.BgColor;
    b.Context.fillRect(0, 0, b.Canvas.width, b.Canvas.height);
    var f = (b.Width + b.Height) / 4, g = f, h = f;
    null !== b.ShiftX && (g = f + parseInt(b.ShiftX, 10));
    null !== b.ShiftY && (h = f + parseInt(b.ShiftY, 10));
    for (var k = 0; k < e.rings.length; k++) {
      var m = f * e.rings[k].radiusAbs * 12;
      b.Context.beginPath();
      b.Context.arc(g, h, m, 0, 2 * Math.PI, !1);
      b.Context.closePath();
      b.Context.strokeStyle = Trekta.Util2.colorNameToHex(e.rings[k].colorRing);
      b.Context.lineWidth = 1;
      b.Context.stroke();
    }
    for (e = 0; e < l.length; e++) {
      m = 6, g = f + 50 * l[e].X + parseInt(b.ShiftX, 10), h = f + 50 * l[e].Y + parseInt(b.ShiftY, 10), b.Context.beginPath(), b.Context.arc(g, h, m, 0, 2 * Math.PI, !1), b.Context.closePath(), b.Context.strokeStyle = "#4169e1", b.Context.lineWidth = 1, b.Context.stroke();
    }
    Cvgr.Algs.Bal.algoBallist_drawDiagonal(b);
    b.Angle += 4 * Cvgr.Vars.nIncTurnsPerFrame * b.Hertz;
    b.Angle > d - 4 && (b.Angle = 0);
  }
};
Cvgr.Algs.Bal.algoBallist_drawDiagonal = function(c) {
  var a = c.Height, b = a - 11, d = c.Width - 11;
  a -= 11;
  c.Context.beginPath();
  try {
    c.Context.moveTo(11, b);
  } catch (e) {
    alert('[debug 20140901\u00b00932]\nException : \n\n"' + e + '"');
    return;
  }
  c.Context.lineTo(d, a);
  c.Context.moveTo(11, a + 5.5);
  c.Context.lineTo(11, a - 5.5);
  c.Context.moveTo(d, a + 5.5);
  c.Context.lineTo(d, a - 5.5);
  c.Context.strokeStyle = c.Color;
  c.Context.fillStyle = c.Color;
  c.Context.fill();
  c.Context.closePath();
  c.Context.strokeStyle = "turquoise";
  c.Context.lineWidth = 3;
  c.Context.stroke();
  c.Context.font = "1.2em Arial";
  c.Context.fillStyle = "turquoise";
  c.Context.fillText("~0.11 m", 16.5, b - 5.5);
  c.CmdHash2.text && (c.Context.fillStyle = "#102030", c.Context.font = "1.2em Arial", c.Context.fillText(c.CmdHash2.text, 10, 20));
};
Cvgr.Algs.Bal.algoBallist_getSeries = function(c) {
  var a = [];
  if (1 > c.length) {
    var b = new Cvgr.Algs.Bal.Hit(10.7, 55);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(9.3, 43);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(2.1, 0);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(2.2, 1);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(2.3, 3);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(2.4, 6);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(2.5, 10);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(2.6, 20);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(2.7, 30);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(2.8, 40);
    a.push(b);
    b = new Cvgr.Algs.Bal.Hit(2.9, 50);
    a.push(b);
  } else {
    c = c.split(" ");
    for (var d = 0; d < c.length; d++) {
      b = c[d].split("/"), b = new Cvgr.Algs.Bal.Hit(b[0], b[1]), a.push(b);
    }
  }
  return a;
};
Cvgr.Algs.Bal.algoBallist_getTarget = function(c) {
  var a = new Cvgr.Algs.Bal.Target;
  "kkspp" === c ? (a.Diameter = 0.500, a.Naame = "Sportpistole 25 m Pr\u00e4zision", a.Shortnam = c, a.rings.push(new Cvgr.Algs.Bal.Ring("10", 0.025, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("9", 0.050, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("8", 0.075, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("7", 0.100, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("6", 0.125, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("5", 0.150, "blue", "white")), 
  a.rings.push(new Cvgr.Algs.Bal.Ring("4", 0.175, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("3", 0.200, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("2", 0.225, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("1", 0.250, "blue", "white"))) : "kkspd" === c ? (a.Diameter = 0.500, a.Naame = "Sportpistole 25 m Duell", a.Shortnam = c, a.rings.push(new Cvgr.Algs.Bal.Ring("5", 0.050, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("4", 0.100, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("3", 
  0.150, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("2", 0.200, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("1", 0.250, "blue", "black"))) : "lg10m" === c ? (a.Diameter = 0.050, a.Naame = "Luftgewehr 10 m", a.Shortnam = c, a.rings.push(new Cvgr.Algs.Bal.Ring("10", 0.0025, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("9", 0.0050, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("8", 0.0075, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("7", 0.0100, "blue", 
  "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("6", 0.0125, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("5", 0.0150, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("4", 0.0175, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("3", 0.0200, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("2", 0.0225, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("1", 0.0250, "blue", "white"))) : "lgdt10m" === c ? (a.Diameter = 0.0100, a.Naame = "Deutsche Luftgewehr-Scheibe 10 m", 
  a.Shortnam = c, a.rings.push(new Cvgr.Algs.Bal.Ring("10", 0.0005, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("9", 0.0010, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("8", 0.0015, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("7", 0.0020, "blue", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("6", 0.0025, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("5", 0.0030, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("4", 0.0035, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("3", 
  0.0040, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("2", 0.0045, "blue", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("1", 0.0050, "blue", "white"))) : (a.Diameter = 0.1500, a.Naame = "Luftpistole 10 m", a.Shortnam = "lupi10m", a.rings.push(new Cvgr.Algs.Bal.Ring("10", 0.0055, "black", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("9", 0.0135, "black", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("8", 0.0215, "gray", "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("7", 0.0295, "gray", 
  "black")), a.rings.push(new Cvgr.Algs.Bal.Ring("6", 0.0375, "gray", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("5", 0.0455, "gray", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("4", 0.0535, "red", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("3", 0.0615, "red", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("2", 0.0695, "red", "white")), a.rings.push(new Cvgr.Algs.Bal.Ring("1", 0.0775, "red", "white")));
  return a;
};
