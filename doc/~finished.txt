
   ****************************
   Finished issues and the like
   ****************************
﻿
   todo 20190401°1223 'outsource lines'
   do : Outsource lines, they are identically wanted from pickupOnTouchMove
   location : Func 20190401°1121 pickupOnMouseMove
   status : done
   ܀

   note 20190401°0441 'about rotation center point'
   text : The MDN documentation says: The rotation center point is always
      the canvas origin. To change the center point, you will need to
      move the canvas by using the translate() method.
   bottomline: Looks like we need to wrap the rotate in two translate.
   location : Algo 'oblongrose'
   status : finished

   todo 20190329°1045 'commandline and default values'
   text : The commandline should be evaluated only after the algorithm is
      known, and the algo default properties are assigned. This makes a clear
      cascaded order, where just each later value overwrite the earlier one.
   finding : It may be not soo simple, because at least the algorithm name
      must have been read already from the commandline, before the others
      values can be processed. And only if the algo name is know, possibly
      a pull-behind with unclear result happens.
   finding : The bulk commandline interpretation should ideally happen
      after the pull-behind process has settled.
   chain : todo 20190330°0151 'read properties in lump-sum'
   status : finished
   ܀

   issue 20140926°1321 'IE8 fails with Context.fillText'
   matter : IE8 does not understand the Context.fillText() function.
   location : func 20140926°1211 Cvgr.Algos.Ballist.executeAlgo_drawDiagonal
   status : finished, IE8 no more supported
   ܀

   todo 20140904°0711 'refactor property parsing'
   todo : Refactor. Compact sequence 20140904°0645 to one-liners or
      somehow eliminate the individual processing of each single property.
      Or outsource above sequence to dedicated helper function. Or use
      a loop over all object properties instead individual properties.
   location : canvasgear/canvasgear.js
   status : finished (func 20190330°0111 replaced by 20190330°0241 initializeCanvas)
   ܀

   issue 20140901°0933 'Opera 10 peculiar about capitals'
   note : If e.g. 'iko.width' was used instead 'iko.Width', Opera will
      receive iPt1x/iPt1y as NaN and throw an exception here. If this
      line here throws exception, far below lines will do so as well.
   location : canvasgear.js, canvasgear-ballist.js
   solution : Use a try envelop on the first element.
   status : Should be finished.
   ܀

   issue 20140901°0331 'IE8 demands extra plus sign'
   matter :  The plus sign before iko.Width and iko.Height is wanted for
       IE8, which will otherwise interpret that as string, and e.g.
       iSize will have the value 3232 if width=64 and height=64.
   location : E.g. line 20140916°0821
       • "var iSize = (+iko.Width + +iko.Height) / 2;"
   status : Finished (feature 20180619°0115 'discontinue IE8 support')
   ܀

   issue 20140831°0631 'IE8 fails drawing canvas'
   matter : Below this point (in page 20140902°1311 attic.html), IE8 draws no more icons.
   note : This has directly to do with debug sequence 20140817°2321 in canvasgearexcanvas.js.
   note : Could not find out why.
   workaround : None yet
   status : Finished (feature 20180619°0115 'discontinue IE8 support')
   ܀

   issue 20140830°0221 'IE get HTML comment'
   summary : About reading a HTML comment from various browsers
   findings :
      (1) A comment node cannot be directly found.
      (2) It can be found in a node collection it's nodeType, which is 8.
      (3) Having that node, IE and the others differ
      (3.1) In IE, the comment can be read via n.innerHTML or n.nodeValue.
      (3.2) In others, n.innerHTML yields 'undefined'.
      (3.3) In others, the comment can be read via n.nodeValue.
   location : File canvasgear.js seq 20140830°0211
   note : After sequence 20140830°0311, it looks as if the both browsers
      understand nodeValue. Possibly, this issue was just a misconception?
   status : Finished
   ܀

   issue 20140829°0331 'Color and stroke select on canvas'.
   matter : When drawing on a canvas, a line is started with beginPath,
      the color and the stroke can be set. On one canvas, only one style
      seems possible, but more styles are wanted.
   ref : Screenshot 20140829°0322. Note icons one and **two**. It tries
          to draw two objects, a triangle and a line. It has only one color
          and stroke, not different, as should. How to write code to put two
          objects on one canvas?
   todo : Clear whether this is just a coding particularity, or whether
       a canvas can indeed display only one color and stroke. Perhaps
       it has to do with layers or the like. [todo 20140829°0315]
   status : Probably finished
   ܀

   issue 20140828°1151 'IE8 canvas innerHTML unusable'
   matter : With IE8, the canvas property 'innerHTML' is unusable. With workaround
      func 20140828°1231 findComments1 or func 20140828°1241 findComments2 applied,
      IE8 may display the dialog as in screenshot 20140828°1321.
   solution : See sequence/function 20140830°0311.
   location : File canvasgear.js seq 20140830°0211
   workaround : Use something else to store the icon command, e.g.
       a comment like in seq 20140828°1251 (discarded 20140830°0246)
   note : Workaround was not useful, makes IE freeze see screenshot 20140828°1321
      http://www.trekta.biz/svn/canvasgeardev/trunk/canvasgear/doc/img/20140828o1321.icondrawer--ie--get-comments.png
   ref 20190324°0813 : A demo how to find comments is now in repo 20140713°1811
        http://www.trekta.biz/svn/demosjs/trunk/findcomments/findcomments.html
   status : Finished with ref 20190324°0813
   ܀

   issue 20140828°0751 'algo calling params quirk'
   title : Algo calling params quirk
   symptom : When calling the outsourced algorithm with the plain Ikon object
      as parameter, only the first canvas is drawn, the other are skipped.
   suspect : Parameter passing is not consequently done by reference.
   workaround : Call it with the full Ikon objects array plus the index.
   note : About failed attempts to pass the plain icon
      - // var x = icos[iFor];
      - // icos[iFor] = algoPulse(x);
      - // algoPulse(icos[iFor]);
   note 20190329°1033 : Issue seems finished but I do not know why, and what it was before.
   status : seems finished (note 20190329°1033)
   ܀

   issue 20140828°0541 'IE8 is drawing outside the canvas'
   matter : If painting outside the canvas, two different behaviours result:
      (1) IE8: The object is painted even outside the canvas borders. This is what IE does.
      (2) Chrome, FF, Opera: The object outside the canvas borders is clipped.
   note : One question is, whether for the outborder parts, the calculations are done
      or skipped. The answer were interesting for resource and performance understanding.
   ref : Screenshots see ..
   status : finished
   ܀

   todo 20140815°1141
   do : Outsource drawing code from the time loop to a dedicated function,
         which can serve as the Algo property of the Ikon object.
   status : done
   ܀


   ———————————————————————
   [file 20140830°0241] ܀Ω
