
   ****************
   Issues and todos
   ****************

   todo 20190330°0423 'catch callback stockpile array overflow'
   matter : The brute force solution of issue 20190330°0355 'callback parameters
      useless' involves a hardcoded array with callbacks. This will come short
      if a page has many external or wrong algorithms.
   do : Implement detecting and processing the possible over-use of this array.
        It suffices, if the affected icons just do not get their wanted external
        algo, but fall back to the default algoritm.
   status : open
   ܀

   issue 20190330°0355 'callback parameters useless'
   matter : Providing the callback for pullScriptBehind seems useless,
      because we call that three times, giving as parameter a variable,
      which has the values 0, then 1, then 2. But when the callback is
      fired three times, it always gets the parameter 2.
   note : Looks like it has to do with value versus reference. A partial
      brute force solution comes with array 20190330°0415 aCallbackStockpile.
      The parameters in the sucessive calls must not come from one variable,
      but must somehow be galvanically isolated, each created on it's own.
   status : solved brute force, no elegant solution yet
   ܀

   issue 20190330°0351 'activation flag flavours'
   matter : Flag 20190330°0143 bIsFirstFrame does not suffice.
       Due to the pull-behind and execute-frame-continue mechanisms,
       this pure frame-specific flag seems not suffice our needs.
   matter : Perhaps we better switch a flags like bIsDefaultValuesDone
   matter : Perhaps additionally we need algo-specific flag like bIsAlgoActivated
   note : See property 20190330°0353 bIsDefaultSettingDone
   status : processing
   ܀

   issue 20190330°0331 'pull-behind only per algo'
   matter : Do the pull-behind only once for one algo, even if that algo appears
      multiple times on the page. Otherwise curious script abortion observed.
   note : This was seen on page 20190324°0511 demo2.html
   status : under construction
   ܀

   todo 20190330°0151 'read properties in lump-sum'
   location : Function 20190330°0111 startCanvasGr_evalCmdlin
   matter : The properties are precessed humble one by one.
   do : Process properties in lump-sum treatment
   chain : todo 20190329°1045 'commandline and default values'
   status : under construction (see func 20190330°0241 settleAlgoProperties)
   ܀

   todo 20190330°0121 'register test buttons cleanup'
   matter : Anonymous function 20140819°1811 registers an event handler
      pretty bold. But that handler is never called, because startCanvasGear()
      is executed only after the onload event was fired?
   do : Cleanup this. But the test buttons work anyway, do they? Why?
   location : Function 20140815°1241 startCanvasGear
   status : open
   ܀

   todo 20190329°0833 'centralize progression'
   matter : Sequence 20140829°0519 'calculate progression' and it's siblings
      exists equally in most algos. This calculation should be done at only
      one single place, at the caller.
   location : At the bottom of most functions executeAlgorithm e.g. 20140829°0511
   status : open
   ܀

   issue 20190329°0421 'impossible index'
   matter : The function is called with iNdx = 2, when only two canvases
      exist on the page. How can this be? Where from comes this call?
   workaround : As a quick-n-dirty remedy I just try a condition
   location : func executeAlgorithm called by Cvgr.Func.executeFrame
   priority : high
   status : open
   ܀

   issue 20160416°1321 'IE8 canvas Context.fillText not supported'
   symptom : Text not drawn in IE8
   location : file 20140916°0411 canvasgersalgos.js "iko.Context.fillText(..)"
   ref : 20160419°1212 presents solutions
       http://stackoverflow.com/questions/6039584/html5-canvas-excanvas-js-ie-text-not-showing-in-ie7
   ref : 20160419°1213 https://code.google.com/archive/p/canvas-text/
   ref : 20160419°1216 http://canvas-text.googlecode.com/svn-history/trunk/
   finding : I tested versions 20160419°121502 and 20160419°122102 of excanvas.js,
      and those did not work either. They just showed a differrent error in IE8.
   solution : Possibly use canvas-text.js (just this may be too expensive).
   status : open (and possibly will never be closed)
   ܀

   issue 20140815°0641 'browser is missing requestAnimationFrame'
   matter : Method requestAnimationFrame does not exist in IE8
   location : canvasgear.js seq 20140815°0651 'workaround for missing requestAnimFrame'
   workaround : Use the fallback shim layer by Paul Irish (seq 20140815°0651).
   note 20190324°0143 : The method comes with IE10, IE9 is still missing it.
   status : Leave as is until also IE9 support shall be dropped.
   ܀

   issue 20150223°1851 'canvas inside paragraph'
   text : IE8 and probably higher, do not render a canvas inside
      a paragraph. (1) This is a drawback because until now, I usually placed
      icons and images inside paragraphs. Those images cannot simply be
      replaced by canvases. As a workaround, I placed the canvas inside
      a dedicated floating div (css div.iconFloatLeft rule 20150223°1841°.
      (2) And it is another drawback, because the Daftari page element
      editor does (so far) not equip the div element with edit icons.
   chain : issue 20150223°1821 'canvas inside paragraph does not work with IE'
   note : As reference for the effect and how to cope, see page 20150223°1511
      http://www.trekta.biz/svn/demomatrix/trunk/pages/sql/intro.html
   status :
   ܀

   issue 20150223°1821 'canvas inside paragraph does not work with IE'
   location : File canvasgear.js for IE
   symptom : If embedding the canvas inside a <p> tag, IE9 will not show it.
   problem : A 'div' inside a 'p' like '<p><div></div></p>' is not valid HTML.
   see : ref 20150223°1831 'stackoverflow: div inside p is adding extra p'
   see : ref 20150223°1813 'Rakesh Pai: IE runtime error using innerHTML'
   workaround : Just wrap the canvas element plus it's command comment
      into a div. No! This destroys the paragraphs 'iconfloatleft' style!
   proposal : Perhaps a javascript preprocessor could find canvases directly
      inside a paragraph, and wrap them with a div element.
   status : Partially solved by workaround. Does work with IE10 but not IE9 and below.
   ܀

   issue 20140901°0911 'Opera fillRect() fail'
   title : Opera fillRect() fail
   location : canvasgear.js with Opera 10.53
   descr : in line "iko.Context.fillRect(0, 0, iko.Canvas.Width, iko.Canvas.Height);",
      Opera throws exception 'Error: NOT_SUPPORTED_ERR'.
   workaround : Wrap line in try envelope. Disadvantage is, that
      the background is no more filled with it's color.
   note : At other locations, fillRect() obviously works fine in Opera.
   finding 20140901°0921 : Opera seems being case sensitive with object
      properties e.g. wrong 'iko.Canvas.Width' vs. right 'iko.Canvas.width'!
   priority : Low
   status : Open
   ܀

   todo 20140901°0633 'support svg rendering'
   do : Write algorithm to draw verctor graphics from graphic files like *.svg.
   status : open
   ܀

   todo 20140901°0631 ''
   do : Allow algorithms be provided in separate files.
   status : done with feature 20180619°0113 'supply external algorithm scripts'
   ܀

   todo 20140901°0621 'gereralize features e.g. rotation'
   do : Generalize features. E.g. make the rotate function not part of one specific
         algorithm, but make a rotation applied to all algorithms like an overlay.
   status :
   ܀

   todo 20140901°0611 ''
   matter : JavaScript advanced programming. Currently, different algorithms
      are called via a switch, depending on the given token from the commandline.
   do : Make the algorithm function a property of the icon, so it can
         directly be called without any switch.
   status :
   ܀

   issue 20140830°0231 'IE webcolors'
   text : IE8 does not understand all webcolors. IE understands
      e.g 'blue' but not 'lightblue'.
   workaround : Use RGB values for all colors. Or implement a mapping function.
   status :
   ܀

   ———————————————————————
   [file 20140903°0112] ܀Ω
