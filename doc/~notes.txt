
   ******************
   Room for any notes
   ******************

   howto 20190401°0111 'draw svg on canvas'
   matter : Which possibilities exist for drawing SVG on the canvas element?
   chain : 'ProfessorCloud → SVG to HTML5 Canvas Converter' ✱
   chain : ref 20190401°0132 'JsFiddle → Font converting SVG to Canvas'
   chain : ref 20190401°0131 'Stackoverflow → Draw SVG on canvas with font'
   chain : ref 20190401°0123 'JsFiddle → Embed svg on canvas' ✱
   chain : ref 20190401°0122 'StackOverflow → Convert SVG to canvas'
   chain : ref 20190401°0114 'Github → canvg (SVG parse and render on Canvas)'
   chain : ref 20190401°0113 'Stackoverflow → Drawing SVG on canvas'
   chain : 
   chain : 
   chain : 
   chain : 
   chain : 
   ܀

   howto 20190331°0541 'about linebreaks in canvas'
   matter : The canvas method fillText does not support linebreaks.
      You have to do it on your own. There exist several solutions.
   see : ref 20190331°0547 'June Rockwell → .. line break in HTML5 Canvas'
   see : ref 20190331°0545 'bramstein → typeset'
   see : ref 20190331°0544 'Liza Shulyayeva → fillText line break limitation'
   see : ref 20190331°0543 'html5canvastutorials → canvas-wrap-text-tutorial'
   see : ref 20190331°0542 'stackoverflow → fillText won't do line breaks
   ܀

   feature 20190331°0411 'rider scripts in two folders'
   matter : Any not-built-in algoritm is searched in subfolder 'riders'.
      If it is not found there, make a second search in the folder where
      canvasgear.js resides.
   status :
   ܀

   feature 20190330°0141 'external algo overwrites built-in one'
   matter : The Template algo exists in two flavours, the built-in and the
      external one. If the both are present, means if file canvasgear.Template.js
      is copied parallel to canvasgear.js, the code of the external file shall
      be executed, not that of the built-in Template algo of canvasgear.js.
      But if no canvasgear.Template.js exists, the built-in code shall work.
   note : To make this work in general, we had to make the pull-behind test
      for each algo existing on the page. This can become pretty expensive.
      So best we suffice with this mechanism restriced to the Template algo.
   status : Works for Template algo, but not others.
   ܀

   note 20190329°1043 'the icon properties so far'
   text : Here are the object properties at the moment when
      func 20190330°0111 startCanvasGr_evalCmdlin is called :
      • AlgoName    : "devault
      • Angle       : 0
      • BgColor     : "Red"
      ⯈ Canvas      : canvas#myCanvas21
      ⯈ CmdsHash    : [algo: "triangle", ...] 
      • Color       : ""
      • Color2      : ""
      • Color3      : ""
      • Command     : "..."
      ⯈ Context     : CanvasRenderingContext2D { ... }
      • DrawOnlyOnce : false                           // replaced by DrawNumberLimit
      • Height      : 98
      • Hertz       : null
      • Ide         : "myCanvas21"
      • ShiftX      : null
      • ShiftY      : null
      • SizeFactor  : null
      • Speed       : null
      • Width       : 98
      • iDrawCount  : 0
      ⯈ __proto__   : Object
      • this        : undefined
   ref : Screenshot 20190329o1053.chrome--debug--ikon-props.png [ref 20190329°1053]
   note : Func 20190330°0111 startCanvasGr_evalCmdlin is replaced
           by function 20190330°0241 settleAlgoProperties
   ܀

   note 20140916°1031 'known cornerstone values'
   text : At this runtime moment, the following cornerstone values are known:
      • Cvgr.Vars.nTrueAngleTurns : This is a value cycling between 0 and 0.999
         with one Hertz frequency independend of the browser.
      • Cvgr.Vars.nIncTurnsPerFrame : This value depends on the browser, it wobbles
         around e.g. 0.017 to 0.020 with Chrome, or 0.021 to 0.023 with IE8.
   location : Func executeFrame behind seq 20140815°1255 'calculate increment per frame'
   status : informal statement
   ܀

   feature 20180619°0115 'discontinue IE8 support'
   text : Support for IE8 is discontinued
   note :
   ܀

   feature 20180619°0113 'supply external algorithm scripts'
   text :  With the Algo namespace we created the mean to automatically
      assign algorithms after their name. With the pull-behind mechanism,
      those named algorithms can be provided afterwards externally.
   note :
   ܀

   note 20140916°0731
   matter : Remember series="10.7/55 9.3/43 8.5/39 6.2/43 3.3/33 1.0/11"
   ܀

   note 20140815°0731
   matter : Coming from the example after (20140814°2211)
      http://www.kirupa.com/html5/creating_simple_html5_canvas_animation.htm,
      I want the following features to be changed:
       - The JS code is inside the HTML, I want it as a separate JS file
       - It is for modern browsers only, I want it for older browsers as well.
   finding : The transition did not succeed on the first attempt. So I introduced
      the file series canvas-2-pulse-v*.html to introduces the wanted features
      step by step. The steps are:
       - v1 : Pretty the original as is.
       - v2 : Introcude excanvas.js
       - v3 : Split file into HTML and JS
       - v4 : ...
   ܀

   ———————————————————————
   [file 20140903°0111] ܀Ω
